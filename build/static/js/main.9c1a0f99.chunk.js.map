{"version":3,"sources":["components/Logo/image/baali-logo.jpg","PrivateRoute.js","constants/index.js","components/ShopStore/Products/Product/index.js","components/ShopStore/Products/Products.js","store/actions/productActions.js","store/actions/authActions.js","components/Header/TopHeader/TopHeader.js","components/Logo/index.js","components/Header/MainHeader/MainHeader.js","components/Header/BottomHeader/BottomHeader.js","store/actions/cartActions.js","components/Header/Header.js","components/ShopStore/ShopStore.js","containers/Shop/index.js","components/UI/MobileTypeInput/index.js","components/UI/SubmitGradientButton/index.js","components/Error/index.js","containers/Login/index.js","containers/Signup/index.js","containers/ControlPanel/index.js","containers/ForgetPassword/index.js","store/reducers/authReducers.js","store/reducers/productReducers.js","containers/ProductDetails/index.js","components/QuantityControl/index.js","containers/Home/index.js","containers/Cart/CartItem/index.js","components/CartPrice/index.js","containers/Cart/index.js","store/reducers/cartReducers.js","components/UI/NormalInput/index.js","containers/PlaceOrder/AddressForm/index.js","components/UI/RadioButton/index.js","containers/PlaceOrder/DeliveryAddress/index.js","containers/PlaceOrder/index.js","containers/ThankYou/index.js","containers/Orders/index.js","containers/App.js","containers/resetPassword/resetPassword.js","serviceWorker.js","index.js"],"names":["module","exports","PrivateRoute","Component","component","rest","render","props","authData","window","localStorage","getItem","auth","JSON","parse","hasOwnProperty","token","to","base_url","withRouter","url","match","slug","className","alt","src","productPic","img","name","price","Products","state","getProducts","categorySlug","filter","then","response","console","log","applyFilter","params","this","getCategories","prevProps","categories","categoriesAr","value","push","key","children","length","categoryTree","Object","keys","products","map","product","_id","id","connect","dispatch","a","query","prop","substring","fetch","json","jsonResponse","status","type","message","productActions","headers","catch","error","getToken","Promise","resolve","TopHeader","guestAccount","isAuthenticated","onClick","logout","user","firstName","authActions","Logo","require","width","height","cart","cartCount","BottomHeader","setState","cat","getCartItems","userId","method","jsonResposne","cartItems","Header","result","cartActions","clear","payload","ShopStore","categoryTitle","Fragment","path","exact","Shop","MobileTypeInput","placeholder","onChange","textHandler","SubmitGradientButton","clicked","label","Error","Login","redirectToReferrer","email","password","isError","errorMessage","e","target","setError","loginHandler","preventDefault","RegExp","test","authenticate","setItem","stringify","er","style","margin","onSubmit","autoComplete","marginTop","display","justifyContent","body","Signup","redirectToreferrer","signupForm","lastName","repassword","updateSignupForm","updatedSignupForm","signupHandler","signup","history","pathname","search","ControlPanel","initState","authReducers","action","productReducers","actions","ProductDetails","addToCart","productId","image","cartItem","quantity","category","productDescription","description","QuantityControl","decreaseQuantity","changeQuantity","increaseQuantity","CartItem","overflow","position","maxWidth","maxHeight","left","transform","total","href","totalAmount","Cart","updateCart","find","item","parseInt","newQuantity","parseFloat","ok","isNaN","split","cartReducers","itemCount","cItem","totalAmt","quantityCount","updateCartItem","updateItem","NormalInput","input","inputHandler","AddressForm","address","addressSubmitHandler","fullName","mobileNumber","pinCode","locality","cityDistrictTown","landmark","alternateNumber","RadioButton","DeliveryAddress","onAddressSelection","PlaceOrder","addresses","alternatePhoneNumber","order","selectedAddress","existingAddress","newAddress","isAddressConfirm","isOrderConfirm","selectedPaymentType","paymentTypes","isActive","getAddresses","updatedAddress","addressSelector","newAddressSelection","updatedAddressList","confirmDeliveryAddress","confirmOrder","selectPaymentOption","submitOrder","paymentType","paymentStatus","clearCart","alignItems","payment","ThankYou","orderId","location","toLocaleUpperCase","Orders","ordersList","getOrders","formatDate","date","d","Date","getDate","getMonth","getFullYear","getOrderTotal","singleOrder","orderTotal","forEach","borderBottom","fontSize","color","fontWeight","orderDate","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c1a0f99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baali-logo.e2d2e4ef.jpg\";","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={(props) => {\r\n        const authData = window.localStorage.getItem('auth');\r\n        if(authData){\r\n            const auth = JSON.parse(authData);\r\n            if(auth.hasOwnProperty('token') && auth.token !== ''){\r\n                return <Component {...props} />\r\n            }else{\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n        }else{\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        \r\n\r\n    }} />\r\n)\r\n\r\nexport default PrivateRoute;","export const base_url = 'http://localhost:2019';","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst Product = props => {\r\n\r\n    const url = props.match.url === '/' ? '/products/all' : props.match.url;\r\n\r\n    return (\r\n        <Link to={`${url}/${props.slug}`}>\r\n            <div className=\"Product\">\r\n                <div className=\"ProductImage\">\r\n                    <img alt=\"\" src={props.productPic[0].img} />\r\n                </div>\r\n                <div className=\"ProductDetails\">\r\n                    <p>{props.name}</p>\r\n                    <p>${props.price}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withRouter(Product);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as productActions from '../../../store/actions/productActions';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Product from './Product';\r\n\r\nclass Products extends Component{\r\n\r\n    state = {\r\n        slug: 'Products'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const slug = this.props.match.params.slug == 'all' ? '' : this.props.match.params.slug\r\n        this.getProducts(slug);\r\n        this.props.getCategories();\r\n    }\r\n\r\n    getProducts = (categorySlug = '', filter = null) => {\r\n       \r\n        this.props.getProducts(categorySlug, filter)\r\n        .then(response => {\r\n\r\n            console.log(response);\r\n\r\n            // this.setState({\r\n            //     products: response.message\r\n            // })\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.match.params.slug != prevProps.match.params.slug){\r\n            this.getProducts(this.props.match.params.slug);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    applyFilter = (filter) => {\r\n        const slug = this.props.match.params.slug == 'all' ? '' : this.props.match.params.slug\r\n        this.getProducts(slug, filter);\r\n    }\r\n\r\n    categoryTree(categories){\r\n        var categoriesAr = [];\r\n        for(var value of categories){\r\n\r\n            categoriesAr.push(\r\n                    <li key={value.slug}>\r\n                        <Link to={`/products/${value.slug}`}>{value.name}</Link>\r\n                        {value.children.length > 0 ? (<ul>{this.categoryTree(value.children)}</ul>) : null}\r\n                    </li>\r\n            );\r\n        }\r\n\r\n        return categoriesAr;\r\n    }\r\n\r\n    render() {\r\n\r\n        const slug = Object.keys(this.props.match.params).length > 0 ? this.props.match.params.slug : this.state.slug;\r\n\r\n        \r\n        \r\n        return (\r\n\r\n            // <div className=\"Content\">\r\n            //         <div className=\"ContentTitle\">\r\n            //             <h2 className=\"CategoryTitle\">{slug}</h2>\r\n            //         </div>\r\n            //         <div className=\"ContentBody\">\r\n            //             <div className=\"SideMenu\">\r\n            //                 <h3 className=\"SideMenuTitle\">Filters</h3>\r\n            //                 <div className=\"Filter\">\r\n            //                     <p className=\"FilterTitle\">Categories</p>\r\n            //                     <ul>\r\n            //                         {\r\n            //                             this.props.products.categories.length > 0 ? \r\n            //                             this.categoryTree(this.props.products.categories) : null\r\n            //                         }\r\n            //                     </ul>\r\n            //                 </div>\r\n                            \r\n            //                <div className=\"Filter\">\r\n            //                    <p className=\"FilterTitle\">Price</p>\r\n            //                    <div>\r\n            //                         <button onClick={() => this.applyFilter({price:1} )} className=\"FilterButton\">Low to High</button>\r\n            //                    </div>\r\n            //                    <div>\r\n            //                         <button onClick={() => this.applyFilter({price: -1})} className=\"FilterButton\">High to Low</button>\r\n            //                    </div>\r\n                               \r\n            //                </div>\r\n                       \r\n            //             </div>\r\n            <div className=\"Content\">\r\n                        <div className=\"MainContent\">\r\n\r\n                        <div className=\"ProductArea\">\r\n                            {\r\n                                this.props.products.products.map(product => <Product\r\n                                    key={product._id}\r\n                                    id={product._id}\r\n                                    name={product.name}\r\n                                    price={product.price}\r\n                                    productPic={product.productPic}\r\n                                    slug={product.slug}\r\n                                />)\r\n                            }\r\n                            \r\n                        </div>\r\n\r\n                            \r\n                        </div>\r\n\r\n                     </div>\r\n            // </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProducts: (categorySlug, filter) => dispatch(productActions.getProducts(categorySlug, filter)),\r\n        getCategories: () => dispatch(productActions.getCategories())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import { base_url } from \"../../constants\";\r\n\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_PRODUCT_CATEGORIES = 'GET_PRODUCT_CATEGORIES';\r\n\r\nexport const getProducts = (categorySlug = '', filter) => {\r\n    return async dispatch => {\r\n\r\n        try{\r\n\r\n            categorySlug = (categorySlug == 'all') ? '' : categorySlug;\r\n\r\n            let query = '';\r\n            if(filter){\r\n                query = '?filter=1&'\r\n                for(let prop in filter){\r\n                    query += `${prop}=${filter[prop]}&`\r\n                }\r\n                query = query.substring(0, query.length-1);\r\n            }\r\n\r\n            const response = await fetch(`${base_url}/products/${categorySlug}${query}`);\r\n            const jsonResponse = await response.json();\r\n            if(response.status == 200){\r\n                dispatch({\r\n                    type: GET_PRODUCTS,\r\n                    products: jsonResponse.message\r\n                });\r\n            }\r\n\r\n            return jsonResponse;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getCategories = () => {\r\n    return dispatch => {\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            dispatch({\r\n                type: GET_PRODUCT_CATEGORIES,\r\n                categories: jsonResponse.message\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (productSlug) => {\r\n    return async dispatch => {\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/products/category/${productSlug}`);\r\n            const jsonResponse = await response.json();\r\n            if(response.status === 200){\r\n\r\n               \r\n\r\n            }\r\n\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n","import { base_url } from \"../../constants\";\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const signup = (user) => {\r\n    return async dispatch => {\r\n        try{\r\n           const response = await fetch(`${base_url}/user/signup`, {\r\n               headers: {\r\n                   'Content-Type': 'application/json',\r\n                   'Accepts': 'application/json'\r\n               },\r\n               method: 'POST',\r\n               body: JSON.stringify({\r\n                   firstName: user.firstName,\r\n                   lastName: user.lastName,\r\n                   email: user.email,\r\n                   password: user.password\r\n               })\r\n           });\r\n           const jsonResponse = await response.json();\r\n           return jsonResponse;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const authenticate = (email, password) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${base_url}/user/login`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                'Accepts': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n\r\n        const jsonResponse = await response.json();\r\n        if(response.status === 200){\r\n\r\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\r\n\r\n            dispatch({\r\n                type: AUTHENTICATE_USER,\r\n                auth: jsonResponse.message\r\n            });\r\n        }\r\n\r\n        return jsonResponse.message;\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n        if(authData){\r\n            window.localStorage.clear();\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                payload: ''\r\n            });\r\n            return Promise.resolve(true);\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n}\r\n\r\nexport const getToken = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n\r\n        if(authData){\r\n            const auth = JSON.parse(authData);\r\n            if(auth.hasOwnProperty('token') && auth.token != ''){\r\n                dispatch({\r\n                    type: AUTHENTICATE_USER,\r\n                    auth: auth\r\n                });\r\n\r\n                return Promise.resolve(true);\r\n\r\n            }\r\n        }\r\n        \r\n        return Promise.resolve(false);\r\n        \r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as authActions from '../../../store/actions/authActions';\r\nimport './style.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass TopHeader extends Component{\r\n\r\n     componentDidMount() {\r\n         this.props.getToken();\r\n     }\r\n\r\n\r\n    render() {\r\n        let guestAccount = <ul className=\"Dropdown Account\">\r\n                                <li><Link to=\"/signup\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Register</span></Link></li>\r\n                                <li><Link to=\"/login\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Login</span></Link></li>\r\n                            </ul>;\r\n        if(this.props.auth.isAuthenticated){\r\n            guestAccount = <ul className=\"Dropdown Account\">\r\n                                <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Orders</span></Link></li>\r\n                                <li><Link to=\"\" onClick={() => this.props.logout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Logout</span></Link></li>\r\n                            </ul>;\r\n       }\r\n\r\n        return (\r\n            <div className=\"TopHeader\">\r\n                 {/* <div className=\"SocialMediaIcons\">\r\n                    <i className=\"fab fa-facebook-f\"></i>\r\n                    <i className=\"fab fa-google-plus-g\"></i>\r\n                    <i className=\"fab fa-instagram\"></i>\r\n                    <i className=\"fab fa-youtube\"></i>\r\n                </div> */}\r\n                <div>\r\n                    <ul className=\"TopMenu\">\r\n                        <li className=\"MenuItem\">\r\n                            <i className=\"far fa-user-circle\"></i>\r\n                            <Link to=\"/account\">{this.props.auth.isAuthenticated ? this.props.auth.user.firstName: 'My Account'}</Link>\r\n                            {guestAccount}\r\n                        </li>\r\n                    </ul>\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopHeader);","import React from 'react';\r\nimport './style.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = props => {\r\n    return (\r\n        <Link to=\"/\">\r\n            <div className=\"Logo\" {...props}>\r\n                <span><img src={require('./image/baali-logo.jpg')} width='130px' height='50px' /></span>\r\n                {/* <span>B@li Store</span> */}\r\n            </div>\r\n        </Link>\r\n        \r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Logo from '../../Logo';\r\nimport * as authActions from '../../../store/actions/authActions';\r\n\r\nconst MainHeader = props => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"MainHeader\">\r\n            <Logo />\r\n            {/* <div>\r\n                <div className=\"SearchOption\">\r\n                    <select>\r\n                        <option>All Categories</option>\r\n                    </select>\r\n                    <input type=\"text\" />\r\n                    <button>\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n            </div> */}\r\n            <div>\r\n                <Link to=\"/cart\"><i className=\"fas fa-shopping-cart\"></i>({props.cartCount})</Link>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHeader);","import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { base_url } from '../../../constants';\r\n\r\nclass BottomHeader extends Component{\r\n\r\n    state = {\r\n        categories: [],\r\n        categoriesAr : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            console.log(jsonResponse);\r\n            this.setState({\r\n                  categories: jsonResponse.message\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    categoryTree(categories){\r\n\r\n        //console.log(categories);\r\n\r\n        var categoriesAr = [];\r\n        for(var value of categories){\r\n\r\n            categoriesAr.push(\r\n                    <li key={value.slug} className=\"Column\">\r\n                        <NavLink to={`/products/${value.slug}`}>{value.name}</NavLink>\r\n                        {value.children.length > 0 ? (<ul>{this.categoryTree(value.children)}</ul>) : null}\r\n                    </li>\r\n            );\r\n        }\r\n\r\n        return categoriesAr;\r\n    }\r\n\r\n    render() {\r\n\r\n        const cat = this.categoryTree(this.state.categories);\r\n\r\n        return (\r\n            \r\n             <div className=\"BottomHeader\">\r\n                  <ul className=\"Menu\">\r\n                     <li className=\"MenuItem\"><Link to=\"/\"></Link></li>\r\n                     <li className=\"MenuItem\">\r\n                         <Link to=\"/products/all\" className=\"MenuItemElement\"></Link>\r\n            {cat}             \r\n                       {/*  <ul className=\"Dropdown\">\r\n                         \r\n                          {/* <li className=\"Column\">\r\n                              <span className=\"ColumnTitle\">\r\n                                  <Link to=\"\">Accessories</Link>\r\n                              </span>\r\n                              <ul className=\"ColumnSubMenu\">\r\n                                  <li><Link to=\"\">Handbags</Link></li>\r\n                                  <li><Link to=\"\">Shoes</Link></li>\r\n                                  <li><Link to=\"\">Watches</Link></li>\r\n                              </ul> \r\n                           </li>\r\n                         <li className=\"Column\">\r\n                                <span className=\"ColumnTitle\">\r\n                                    <Link to=\"\">Shirts & Tops</Link>\r\n                                </span>\r\n                                <ul className=\"ColumnSubMenu\">\r\n                                    <li><Link to=\"\">Dresses</Link></li>\r\n                                    <li><Link to=\"\">Polos</Link></li>\r\n                                    <li><Link to=\"\">Tshirts</Link></li>\r\n                                    <li><Link to=\"\">Women Dresses</Link></li>\r\n                                </ul> \r\n                            </li>\r\n                            <li className=\"Column\">\r\n                                <span className=\"ColumnTitle\">\r\n                                    <Link to=\"\">Swimsuits</Link>\r\n                                </span>\r\n                                <ul className=\"ColumnSubMenu\">\r\n                                    <li><Link to=\"\">Shorts</Link></li>\r\n                                </ul>  \r\n                            </li>  \r\n                         </ul> */}\r\n        </li>  \r\n                    {/* <li className=\"MenuItem\"><Link to=\"/categories\">Categories</Link></li>\r\n                    <li className=\"MenuItem\"><Link to=\"/information\">Information</Link></li>\r\n                    <li className=\"MenuItem\"><Link to=\"/blog\">Blog</Link></li> */}\r\n                </ul>  \r\n    \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default BottomHeader;","import { base_url } from \"../../constants\";\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const GET_CART_DETAILS = 'GET_CART_DETAILS';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const addToCart = (token, cartItem) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await fetch(`${base_url}/cart/add`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                body: JSON.stringify(cartItem),\r\n                method: 'POST'\r\n            });\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: ADD_TO_CART,\r\n                    cartItem: cartItem\r\n                });\r\n            }\r\n\r\n            return jsonResposne;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCartItems = (token, userId) => {\r\n    return async dispatch => {\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/user/${userId}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 200){\r\n                dispatch({\r\n                    type: GET_CART_DETAILS,\r\n                    cartItems: jsonResposne.message[0]\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message[0];\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const updateCart = (token, userId, product) => {\r\n    return async dispatch => {\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/update/quantity`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    productId: product.productId,\r\n                    quantity: product.quantity,\r\n                    total: product.total\r\n                })\r\n            });\r\n            const jsonResposne = await response.json();\r\n\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: UPDATE_CART,\r\n                    item: product\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message;\r\n\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CLEAR_CART,\r\n            payload: null\r\n        });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport TopHeader from './TopHeader/TopHeader';\r\nimport MainHeader from './MainHeader/MainHeader';\r\nimport BottomHeader from './BottomHeader/BottomHeader';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n\r\n                if(result){\r\n                    this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated} = this.props.auth;\r\n        const {cart} = this.props;\r\n       const cartCount = isAuthenticated ? cart.cartCount : '';\r\n\r\n        return (\r\n            <header className=\"Header\">\r\n                <TopHeader logout={this.logout} />\r\n                 <MainHeader cartCount={cartCount} />\r\n                <BottomHeader />\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       getToken: () => dispatch(authActions.getToken()),\r\n       getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n       logout: () => dispatch(authActions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport Products from './Products/Products';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport * as authAtions from '../../store/actions/authActions';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass ShopStore extends Component{\r\n\r\n    state={\r\n        categoryTitle: 'Products'\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('Parents');\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Products} />\r\n                    <Route path=\"/products\" exact component={Products} />\r\n                    <Route path=\"/products/:slug\" component={Products} />\r\n                </Switch>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, null)(ShopStore);","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport ShopStore from '../../components/ShopStore/ShopStore';\r\n\r\nclass Shop extends Component{\r\n    render(){\r\n        return (\r\n            <ShopStore />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shop;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst MobileTypeInput = props => {\r\n    return (\r\n        <div className=\"InputGroup\">\r\n            <input \r\n                type={props.type} \r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.textHandler}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MobileTypeInput;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst SubmitGradientButton = props => {\r\n    return (\r\n            <button \r\n                className=\"SubmitGradientButton\"\r\n                onClick={props.clicked}\r\n                {...props}\r\n            >\r\n                {props.label}\r\n            </button>\r\n        );\r\n}\r\n\r\nexport default SubmitGradientButton;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Error = props => <div className=\"Error\">{props.children}</div>\r\n\r\nexport default Error\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './style.css';\r\nimport Logo from '../../components/Logo';\r\n\r\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\r\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\r\n\r\nimport * as authActions from '../../store/actions/authActions';\r\n import { connect } from 'react-redux';\r\n import Error from '../../components/Error';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        redirectToReferrer: false,\r\n        email: '',\r\n        password: '',\r\n        isError: false,\r\n        errorMessage: ''\r\n    }\r\n\r\n    textHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    setError = (error, message) => {\r\n        this.setState({\r\n            error: error,\r\n            errorMessage: message\r\n        })\r\n    }\r\n\r\n    loginHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.email === ''){\r\n            this.setError(true, 'Enter Email'); return;\r\n        }\r\n\r\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n        if(!emailPattern.test(this.state.email)){\r\n            this.setError(true, 'Invalid Email Address'); return;\r\n        }\r\n\r\n        if(this.state.password === ''){\r\n            this.setError(true, 'Enter Password'); return;\r\n        }\r\n\r\n        this.props.authenticate(this.state.email, this.state.password)\r\n        .then(response => {\r\n            console.log(response);\r\n            if(response.hasOwnProperty('token')){\r\n                window.localStorage.setItem('auth', JSON.stringify(response))\r\n                this.setState({\r\n                    redirectToReferrer: true\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                // result will be either true or false\r\n                if(result){\r\n                    this.setState({\r\n                        redirectToReferrer: true\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .catch(er => {\r\n                console.log(er);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if(this.state.redirectToReferrer){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"LoginContainer\">\r\n                <div className=\"WelcomeText\">\r\n                    <h3>Login</h3>\r\n                </div>\r\n                <Logo style={{margin: '0 auto'}} />\r\n                <div className=\"LoginWrapper\">\r\n                    <p></p>\r\n                    <form onSubmit={this.loginHandler} autoComplete=\"off\">\r\n\r\n                        <MobileTypeInput \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            value={this.state.email}\r\n                            textHandler={this.textHandler}\r\n                            name=\"email\"\r\n                        />\r\n                        <MobileTypeInput \r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={this.state.password}\r\n                            textHandler={this.textHandler}\r\n                            name=\"password\"\r\n                        />\r\n\r\n                        <Error>\r\n                            {this.state.errorMessage}\r\n                        </Error>\r\n                        \r\n                        <SubmitGradientButton \r\n                            label=\"Login\"\r\n                            style={{marginTop: '30px'}}\r\n                        />\r\n                    </form>\r\n\r\n                    \r\n\r\n        </div> \r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <Link to=\"/signup\">Create a new account</Link>\r\n                    {/* <Link to=\"/forget-password\">Forgot Password ?</Link>  */}\r\n                </div>  \r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authenticate: (email, password) => dispatch(authActions.authenticate(email, password)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport Logo from '../../components/Logo';\r\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\r\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\r\nimport * as authActions from '../../store/actions/authActions';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport  { connect } from 'react-redux';\r\nimport Error from '../../components/Error';\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        redirectToreferrer: false,\r\n        signupForm: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            repassword: '',\r\n            isError: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    textHandler = (e) => {\r\n        const signupForm = this.state.signupForm;\r\n        const updateSignupForm = {\r\n            ...signupForm,\r\n            [e.target.name] : e.target.value\r\n        }\r\n        this.setState({\r\n            signupForm: updateSignupForm\r\n        })\r\n    }\r\n\r\n    setError = (error, message) => {\r\n        const { signupForm } = this.state;\r\n        const updatedSignupForm = {\r\n            ...signupForm,\r\n            isError: error,\r\n            errorMessage: message\r\n        }\r\n        this.setState({\r\n            signupForm: updatedSignupForm\r\n        });\r\n    }\r\n\r\n    signupHandler = (e) => {\r\n        e.preventDefault();\r\n        const { signupForm } = this.state;\r\n        if(signupForm.firstName === ''){\r\n            this.setError(true, 'Enter First Name'); return;\r\n        }\r\n        if(signupForm.lastName === ''){\r\n            this.setError(true, 'Enter Last Name');\r\n            return;\r\n        }\r\n\r\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n        if(!emailPattern.test(signupForm.email)){\r\n            this.setError(true, 'Invalid Email Address'); return;\r\n        }\r\n\r\n        if(signupForm.email === ''){\r\n            this.setError(true, 'Enter Email');\r\n            return;\r\n        }\r\n        if(signupForm.password === ''){\r\n            this.setError(true, 'Enter Password');\r\n            return;\r\n        }\r\n        if(signupForm.repassword === ''){\r\n            this.setError(true, 'Enter Repassword');\r\n            return;\r\n        }\r\n        if(signupForm.password !== signupForm.repassword){\r\n            this.setError(true, 'Password dosent match');\r\n            return;\r\n        }\r\n\r\n        const user = {\r\n            firstName: signupForm.firstName,\r\n            lastName: signupForm.lastName,\r\n            email: signupForm.email,\r\n            password: signupForm.password\r\n        }\r\n\r\n        this.props.signup(user)\r\n        .then(jsonResponse => {\r\n            console.log(jsonResponse);\r\n            this.props.history.push({\r\n                pathname: '/login',\r\n               search: '?signup=success',\r\n               state: jsonResponse.message \r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                // result will be either true or false\r\n                if(result){\r\n                    this.setState({\r\n                        redirectToreferrer: true\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .catch(er => {\r\n                console.log(er);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n       const { signupForm, redirectToreferrer }  = this.state;\r\n\r\n       if(redirectToreferrer){\r\n           return <Redirect to=\"/\" />\r\n       }\r\n\r\n        return (\r\n            <div className=\"LoginContainer\">\r\n                <div className=\"WelcomeText\">\r\n                    <h3>Signup</h3>\r\n                </div>\r\n                <Logo style={{margin: '0 auto'}} />\r\n                <div className=\"LoginWrapper\">\r\n                    <form onSubmit={this.signupHandler} autoComplete=\"off\">\r\n\r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <div style={{width: '49%'}}>\r\n                                <MobileTypeInput \r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    value={signupForm.firstName}\r\n                                    textHandler={this.textHandler}\r\n                                    name=\"firstName\"\r\n                                />\r\n                            </div>\r\n                            <div style={{width: '49%'}}>\r\n                                <MobileTypeInput \r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    value={signupForm.lastName}\r\n                                    textHandler={this.textHandler}\r\n                                    name=\"lastName\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <MobileTypeInput \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            value={signupForm.email}\r\n                            textHandler={this.textHandler}\r\n                            name=\"email\"\r\n                        />\r\n                        <MobileTypeInput \r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={signupForm.password}\r\n                            textHandler={this.textHandler}\r\n                            name=\"password\"\r\n                        />\r\n                        <MobileTypeInput \r\n                            type=\"password\"\r\n                            placeholder=\"Re-enter Password\"\r\n                            value={signupForm.repassword}\r\n                            textHandler={this.textHandler}\r\n                            name=\"repassword\"\r\n                        />\r\n                        \r\n                        <Error>\r\n                            {this.state.signupForm.errorMessage}\r\n                        </Error>\r\n\r\n                        <SubmitGradientButton \r\n                            label=\"Signup\"\r\n                            style={{marginTop: '30px'}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <Link to=\"/login\">Login</Link>\r\n                     {/* <Link to=\"/forget-password\">Forgot Password ?</Link>  */}\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       signup: (user) => dispatch(authActions.signup(user)),\r\n       getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {auth: state.auth}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass ControlPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>ControlPanel</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPanel;","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport Logo from '../../components/Logo';\r\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\r\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\r\n//import {NotificationManager,NotificationContainer} from 'react-notifications'\r\n//import axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { email: \"\", errors: {} };\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n\r\n    // textHandler = (e) => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    handleInput = e => {\r\n        // e.preventDefault();\r\n        console.log(e.target.value);\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    // forgetPasswordHandler = (e) => {\r\n    //     e.preventDefault();\r\n    //     console.log(this.state);\r\n    // }\r\n\r\n    handleForm = e => {\r\n        e.preventDefault();\r\n        if (this.state.email === '') {\r\n            //NotificationManager.warning(\"Email is Required\");\r\n            return false;\r\n        }\r\n        // const data = { email: this.state.email };\r\n        // axios\r\n        //     .post(\"http://localhost:2019/user/reset\", data)\r\n        //     .then(result => {\r\n        //        NotificationManager.success(\"Password Reset link sent to yout email .Please check the your email.Link Will be Valid For 30 min\");\r\n        //     })\r\n        //     .catch(err => {\r\n        //           if (err.response && err.response.status === 404)\r\n        //             NotificationManager.error(err.response.data.msg);\r\n        //           else\r\n        //             NotificationManager.error(\"Something Went Wrong\");\r\n        //           this.setState({ errors: err.response })\r\n        //     });\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginContainer\">\r\n                <div className=\"WelcomeText\">\r\n                    <h3>Reset Password</h3>\r\n                </div>\r\n                <Logo style={{margin: '0 auto'}} />\r\n                <div className=\"LoginWrapper\">\r\n                    <form onSubmit={this.handleForm} autoComplete=\"off\">\r\n\r\n                        <MobileTypeInput \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            value={this.state.email}\r\n                            textHandler={this.handleInput}\r\n                            name=\"email\"\r\n                        />\r\n                        <SubmitGradientButton \r\n                            label=\"Send\" value=\"send Mail\" onClick={this.handleForm}\r\n                            style={{marginTop: '30px'}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <Link to=\"/signup\">Create a new account</Link>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import { AUTHENTICATE_USER, LOGOUT_USER } from \"../actions/authActions\";\r\n\r\nconst initState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    token: ''\r\n}\r\n\r\nconst authReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case AUTHENTICATE_USER: \r\n            state = {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.auth.user,\r\n                token: action.auth.token\r\n            }\r\n            break;\r\n        case LOGOUT_USER:\r\n            state = {\r\n                isAuthenticated: false,\r\n                user: {},\r\n                token: ''\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default authReducers;","import { GET_PRODUCTS, GET_PRODUCT_CATEGORIES } from \"../actions/productActions\";\r\n\r\nconst initState = {\r\n    products: [],\r\n    categories: []\r\n}\r\n\r\nconst productReducers = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case GET_PRODUCTS:\r\n            state = {\r\n                ...state,\r\n                products: actions.products\r\n            }\r\n            break;\r\n        case GET_PRODUCT_CATEGORIES:\r\n            state = {\r\n                ...state,\r\n                categories: actions.categories\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default productReducers;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../../components/Header/Header';\r\nimport { connect } from 'react-redux';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport * as authActions from '../../store/actions/authActions';\r\n\r\nimport './style.css';\r\nimport { base_url } from '../../constants';\r\n\r\nclass ProductDetails extends Component{\r\n\r\n    state = {\r\n        product: null,\r\n        redirectToReferrer: false\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                if(result){\r\n                    this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n                \r\n\r\n        \r\n        const { category, slug } = this.props.match.params;\r\n        fetch(`${base_url}/products/${category}/${slug}`)\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n\r\n            if(jsonResponse.hasOwnProperty('message')){\r\n                console.log(jsonResponse);\r\n                this.setState({\r\n                    product: jsonResponse.message\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    addToCart = (productId, price, name, image) => {\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.history.push('/login');\r\n        }\r\n        else{\r\n            this.props.history.push('/cart');\r\n            return;\r\n        }\r\n\r\n        const { auth } = this.props;\r\n        const cartItem = {\r\n            user: auth.user.userId,\r\n            product: productId,\r\n            name: name,\r\n            image: image,\r\n            quantity: 1,\r\n            price: price\r\n        }\r\n        this.props.addToCart(auth.token, cartItem)\r\n        .then(response => {\r\n            //console.log(response);\r\n            console.log(this.props.cart);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        const { product } = this.state;\r\n\r\n        let productDescription;\r\n\r\n        if(this.state.product){\r\n            productDescription = \r\n            \r\n                <div className=\"Content\">\r\n                    <div className=\"ProductDetailsWrapper\">\r\n                        <div className=\"ProductDetailsImage\">\r\n                            <div className=\"ProductDetailsImageWrapper\">\r\n                                <img src={product.productPic[0].img} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"ActionButtonWrapper\">\r\n                                <button onClick={() => { this.addToCart(product._id, product.price, product.name, product.productPic[0].img) }}>\r\n                                <i className=\"fas fa-shopping-cart\"></i>&nbsp;ADD TO CART</button>\r\n                                {/* <button style={{background: '#fb641b'}}><i className=\"fas fa-bolt\"></i>&nbsp;BUY NOW</button> */}\r\n                            </div>\r\n                        </div>\r\n                          <div className=\"ProductDetails\">\r\n                        {/*     <div className=\"BreadCrumb\">\r\n                                <small>Home > Mobiles > Iphone</small>\r\n                            </div> */}\r\n                            <p className=\"ProductTitle\">{product.name}</p>\r\n                            <p className=\"ProductPrice\">${product.price}</p>\r\n                            <div className=\"ProductDescription\">\r\n                                <h3>Product Description</h3>\r\n                                <p>{product.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"SimilarProducts\">\r\n                        <h3>Similar Products</h3>\r\n                     <div className=\"SimilarProductsWrapper\">\r\n                            \r\n                            <div className=\"SimilarProduct\">\r\n                                <div className=\"SimilarProductImage\">\r\n                                    <img src=\"https://rukminim1.flixcart.com/image/800/960/jp780i80/t-shirt/u/8/t/s-tnvhdfulabstract1-tripr-original-imafbdarnwhfh7uu.jpeg?q=50\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"SimilarProductDetails\">\r\n                                    <h5>Product Name</h5>\r\n                                    <p>500 PKR</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"SimilarProduct\">\r\n                                <div className=\"SimilarProductImage\">\r\n                                    <img src=\"https://rukminim1.flixcart.com/image/800/960/jyhl1u80/shirt/5/x/d/xl-909-lawful-casual-original-imafg864rydp6ar4.jpeg?q=50\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"SimilarProductDetails\">\r\n                                    <h5>Product Name</h5>\r\n                                    <p>500 PKR</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"SimilarProduct\">\r\n                                <div className=\"SimilarProductImage\">\r\n                                    <img src=\"https://rukminim1.flixcart.com/image/495/594/jxgflow0/t-shirt/y/h/g/xxl-tnvgyvnful-d22-tripr-original-imafhuq2s3yxbx2t.jpeg?q=50\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"SimilarProductDetails\">\r\n                                    <h5>Product Name</h5>\r\n                                    <p>500 PKR</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"ProductReviews\">\r\n                        <h3>Product Reviews</h3> \r\n                    </div>  */}\r\n                    \r\n            </div>\r\n        }else{\r\n            productDescription = <div>Product is loading...!</div>\r\n        }\r\n        \r\n        \r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                {productDescription}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (token, cartItem) => dispatch(cartActions.addToCart(token, cartItem)),\r\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","import React from 'react';\r\nimport './style.css';\r\n\r\nconst QuantityControl = props => {\r\n    return (\r\n        <div className=\"QunantityControl\">\r\n            <button onClick={(e) => props.decreaseQuantity(e, props.productId)}>-</button>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={(e) => props.changeQuantity(e, props.productId)} \r\n                    name={props.name} \r\n                    value={props.quantity}\r\n                />\r\n            <button onClick={(e) => props.increaseQuantity(e, props.productId)}>+</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuantityControl;","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\n\r\nclass Home extends Component{\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div>\r\n                    <h1>Home Page</h1>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport QuantityControl from '../../../components/QuantityControl';\r\n\r\nimport './style.css';\r\n\r\nconst CartItem = props => {\r\n    return (\r\n        <div className=\"SingleItem\">\r\n            <div className=\"ItemWrapper\">\r\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\r\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"ItemDetails\">\r\n                    <p className=\"ItemName\">{props.name}</p>\r\n                    <p className=\"ItemPrice\">${props.total}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"CartActionButtons\">\r\n                <QuantityControl\r\n                    productId={props.productId}\r\n                    name={props.name} \r\n                    quantity={props.quantity}\r\n                    changeQuantity={props.changeQuantity}\r\n                    increaseQuantity={props.increaseQuantity}\r\n                    decreaseQuantity={props.decreaseQuantity}\r\n                />\r\n                <a href=\"#\">REMOVE</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport './style.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartPrice = props => {\r\n\r\n    return (\r\n        <div className=\"PriceWrapper\">\r\n            {/* show price */}\r\n            <div className=\"CardTitle\">\r\n                <h3>PRICE DETAILS</h3>\r\n            </div>\r\n            <div className=\"CardBody\">\r\n                <div className=\"FinalBilling\">\r\n                    <div className=\"Row\">\r\n                        <p>Price ({props.cart.cartCount})</p>\r\n                        <p>${props.cart.totalAmount}</p>\r\n                    </div>\r\n                    <div className=\"Row\">\r\n                        <p>Delivery</p>\r\n                        <p>$0</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"Row\">\r\n                        <h4>Total Payable</h4>\r\n                        <h4>${props.cart.totalAmount}</h4>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CartPrice);","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport CartItem from './CartItem';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport CartPrice from '../../components/CartPrice';\r\n\r\nclass Cart extends Component{\r\n\r\n    state = {\r\n        cartItems: []\r\n    }\r\n\r\n    decreaseQuantity = (e, productId) => {\r\n        this.updateCart(productId, -1);\r\n    }\r\n\r\n    increaseQuantity = (e, productId) => {\r\n        this.updateCart(productId, 1);\r\n    }\r\n\r\n    updateCart = async (productId, quantity) => {\r\n        try{\r\n            const auth = this.props.auth;\r\n            let product = this.state.cartItems.find(item => item.product === productId);\r\n            product = {\r\n                productId: product.product,\r\n                quantity: parseInt(product.quantity) + parseInt(quantity),\r\n                newQuantity: quantity,\r\n                price: product.price,\r\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\r\n            }\r\n            if(product.quantity <= 0){\r\n                return;\r\n            }\r\n            const response = await this.props.updateCart(auth.token, auth.user.userId, product);\r\n            if(response.ok == 1){\r\n                const {cartItems} = this.state;\r\n                this.setState({\r\n                    cartItems: cartItems.map(item => item.product === productId ? \r\n                        {...item, quantity: item.quantity + quantity, total: item.total + (item.price * quantity)}: item)\r\n                })\r\n            }\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    changeQuantity = (e, productId) => {\r\n\r\n        console.log(e.target.value);\r\n\r\n        if(isNaN(e.target.value)){\r\n            return;\r\n        }\r\n\r\n        const firstDigit = parseInt(e.target.value.split(\"\")[0]);\r\n        if(firstDigit === 0){\r\n            return;\r\n        }\r\n\r\n        //alert(e.target.value);\r\n\r\n        this.updateCart(productId, parseInt(e.target.value));\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                if(result){\r\n                    const cartItems = this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\r\n                    return cartItems;\r\n                }\r\n                return [];\r\n            })\r\n            .then(cartItems => {\r\n                if(cartItems.cart.length > 0){\r\n\r\n                    console.log(this.props.cart)\r\n\r\n                    this.setState({\r\n                        cartItems: this.props.cart.cartItem\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }else{\r\n            this.setState({\r\n                cartItems: this.props.cart.cartItem\r\n            })\r\n        }\r\n    }\r\n\r\n    render (){\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"CartWrapper\">\r\n                        <div className=\"CartDetails\">\r\n                            {/* List cart items */}\r\n                            <div className=\"CardTitle\">\r\n                                <h3>My Cart</h3>\r\n                            </div>\r\n                            <div className=\"CardBody\">\r\n\r\n                                {\r\n                                    this.state.cartItems.map(product => \r\n                                        <CartItem\r\n                                            key={product.product}\r\n                                            productId={product.product}\r\n                                            name={product.name}\r\n                                            image={product.image}\r\n                                            price={product.price}\r\n                                            quantity={product.quantity}\r\n                                            total={product.total}\r\n                                            //name=\"quantity\" \r\n                                            changeQuantity={this.changeQuantity}\r\n                                            increaseQuantity={this.increaseQuantity}\r\n                                            decreaseQuantity={this.decreaseQuantity}\r\n                                    />)\r\n                                }\r\n                                \r\n\r\n                                <div className=\"PlaceOrder\">\r\n                                    <button className=\"PlaceOrderButton\" onClick={() => this.props.history.push('/place-order')}>Place Order</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <CartPrice />\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {auth: state.auth,cart: state.cart}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n        updateCart: (token, userId, product) => dispatch(cartActions.updateCart(token, userId, product)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../actions/cartActions\"\r\n\r\nconst initState = {\r\n    cartItem: [],\r\n    totalAmount: 0,\r\n    cartCount: 0\r\n}\r\n\r\nconst cartReducers = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case ADD_TO_CART:\r\n            const cartItem = state.cartItem;\r\n            let updatedCartItem = [];\r\n            let totalAmount;\r\n\r\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\r\n\r\n            if(itemCount.length === 0){\r\n                updatedCartItem = [\r\n                    ...cartItem,\r\n                    {\r\n                        product: actions.cartItem.product,\r\n                        name: actions.cartItem.name,\r\n                        image: actions.cartItem.image,\r\n                        price: actions.cartItem.price,\r\n                        quantity: actions.cartItem.quantity,\r\n                        total: actions.cartItem.quantity * actions.cartItem.price\r\n                    }\r\n                ];\r\n            }else{\r\n                updatedCartItem = cartItem.map(item => \r\n                    item.product === actions.cartItem.product ?\r\n                    {\r\n                        ...item,\r\n                        quantity: item.quantity + actions.cartItem.quantity,\r\n                        total: item.total + actions.cartItem.price\r\n                    } : item\r\n                    )\r\n            }\r\n            totalAmount = state.totalAmount + actions.cartItem.price\r\n            state = {\r\n                cartItem: updatedCartItem,\r\n                totalAmount: totalAmount,\r\n                cartCount: state.cartCount + 1\r\n            }\r\n            break;\r\n        case GET_CART_DETAILS:\r\n            const cItem = actions.cartItems.cart;\r\n            let totalAmt = 0;\r\n            let quantityCount = 0;\r\n            const updateCartItem = cItem.map(item => {\r\n                totalAmt += item.total;\r\n                quantityCount += item.quantity;\r\n                return {\r\n                    product: item.product._id,\r\n                    name: item.product.name,\r\n                    image: item.product.productPic[0].img,\r\n                    price: item.price,\r\n                    quantity: item.quantity,\r\n                    total: item.total\r\n                }\r\n            })\r\n            state = {\r\n                cartItem: updateCartItem,\r\n                totalAmount: totalAmt,\r\n                cartCount: quantityCount\r\n            }\r\n            break;\r\n        case UPDATE_CART:\r\n            const updateItem = actions.item;\r\n            const cartItems = state.cartItem.map(item => {\r\n                return item.product === updateItem.productId ? \r\n                {\r\n                    ...item,\r\n                    quantity: updateItem.quantity,\r\n                    total: updateItem.total\r\n                } : item\r\n            });\r\n            state = {\r\n                cartItem: cartItems,\r\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\r\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\r\n            }\r\n            break;\r\n        case CLEAR_CART:\r\n            state = {\r\n                cartItem: [],\r\n                totalAmount: 0,\r\n                cartCount: 0\r\n            }\r\n            break;\r\n        default:\r\n        break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default cartReducers;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst NormalInput = props => {\r\n\r\n    let input;\r\n    switch(props.type){\r\n        case 'text':\r\n                input = <input \r\n                                    type={props.type}\r\n                                    name={props.name} \r\n                                    className=\"NormalInput\" \r\n                                    placeholder={props.placeholder}\r\n                                    value={props.value}\r\n                                    onChange={props.inputHandler} />\r\n                break;\r\n        case 'textarea':\r\n                input = <textarea \r\n                                type={props.type}\r\n                                name={props.name} \r\n                                className=\"NormalInput\" \r\n                                placeholder={props.placeholder}\r\n                                value={props.value}\r\n                                onChange={props.inputHandler} />\r\n                    break;\r\n        case 'select':\r\n                input = <select>\r\n                    <option>---Select---</option>\r\n                </select>\r\n                break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\nexport default NormalInput;","import React, { Component } from 'react';\r\nimport NormalInput from '../../../components/UI/NormalInput';\r\n\r\n\r\nconst AddressForm = props =>  {\r\n\r\n        const {address} = props;\r\n     \r\n\r\n        return (\r\n            <form onSubmit={props.addressSubmitHandler}>\r\n                 <div className=\"Row\">\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"fullName\"\r\n                                value={address.fullName}\r\n                                placeholder={'Full Name'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"mobileNumber\"\r\n                                value={address.mobileNumber}\r\n                                placeholder={'10-digit Mobile Number'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Row\">\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"pinCode\"\r\n                                value={address.pinCode}\r\n                                placeholder={'Pincode'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"locality\"\r\n                                value={address.locality}\r\n                                placeholder={'Locality'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"Row\">\r\n                        <NormalInput \r\n                                name=\"address\"\r\n                                value={address.address}\r\n                                placeholder={'Address (Area and Street)'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"textarea\"\r\n                                style={{height: '60px'}}\r\n                        />\r\n                    </div>\r\n    \r\n                    <div className=\"Row\">\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"cityDistrictTown\"\r\n                                value={address.cityDistrictTown}\r\n                                placeholder={'City/District/Town'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"state\"\r\n                                value={address.state}\r\n                                placeholder={'State'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"Row\">\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"landmark\"\r\n                                value={address.landmark}\r\n                                placeholder={'Landmark (Optional)'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                        <div style={{width: '49%'}}>\r\n                            <NormalInput \r\n                                name=\"alternatePhoneNumber\"\r\n                                value={address.alternateNumber}\r\n                                placeholder={'Alternate Phone (Optional)'}\r\n                                inputHandler={props.inputHandler}\r\n                                type=\"text\"\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"Row\">\r\n                        <button className=\"DeliveryAddressButton\">SAVE AND DELIVER HERE</button>\r\n                    </div>\r\n\r\n            </form>\r\n           \r\n        );\r\n    \r\n    \r\n}\r\n\r\nexport default AddressForm;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst RadioButton = props => {\r\n        return (\r\n            <label className=\"RadioButton\">\r\n                {props.label}\r\n                <input onChange={props.onChange} type=\"radio\" name={props.name} value={props.value} />\r\n                <span className=\"Checkmark\"></span>\r\n            </label>\r\n        );\r\n    \r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport './style.css';\r\nimport RadioButton from '../../../components/UI/RadioButton';\r\n\r\nconst DeliveryAddress = props => {\r\n\r\n    const {address} = props;\r\n\r\n    return (\r\n                <div style={{margin: '10px 0'}}>\r\n                    <div className=\"AddressSelection\" key={address._id}>\r\n                        <RadioButton \r\n                            name=\"address\"\r\n                            label=\"\"\r\n                            value={address._id}\r\n                            onChange={props.onAddressSelection}\r\n                        />\r\n                        <div>\r\n                            <p className=\"AddressAuthor\">{address.fullName} {address.mobileNumber}</p>\r\n                            <p className=\"AuthorAddress\">{address.address}, {address.cityDistrictTown}, {address.state} - {address.pinCode}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n }\r\n\r\nexport default DeliveryAddress;","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport NormalInput from '../../components/UI/NormalInput';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport AddressForm from './AddressForm';\r\nimport CartPrice from '../../components/CartPrice';\r\nimport DeliveryAddress from './DeliveryAddress';\r\nimport RadioButton from '../../components/UI/RadioButton';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport { base_url } from '../../constants';\r\n\r\nclass PlaceOrder extends Component{\r\n\r\n    state = {\r\n        addresses: [],\r\n        address: {\r\n            fullName: \"\",\r\n            mobileNumber: \"\",\r\n            pinCode: \"\",\r\n            locality: \"\",\r\n            address: \"\",\r\n            cityDistrictTown: \"\",\r\n            state: \"\",\r\n            landmark: \"\",\r\n            alternatePhoneNumber: \"\"\r\n        },\r\n        order: [],\r\n        selectedAddress: '',\r\n        existingAddress: false,\r\n        newAddress: false,\r\n        isAddressConfirm: false,\r\n        isOrderConfirm: false,\r\n        selectedPaymentType: 'cod',\r\n        paymentTypes: [\r\n            // {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\r\n            // {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\r\n            // {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\r\n            {id: 1, value: 'cod', label: 'Cash on Delivery', isActive: true},\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                if(result){\r\n\r\n                    this.getAddresses();\r\n\r\n                }else{\r\n                    this.props.history.push('/login');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }else{\r\n            this.getAddresses();\r\n        }\r\n    }\r\n\r\n    getAddresses = () => {\r\n        const userId = this.props.auth.user.userId;\r\n        fetch(`${base_url}/user/get-addresses/`+userId, {\r\n            headers: {\r\n                'auth-token': this.props.auth.token\r\n            }\r\n        })\r\n        .then(response => {\r\n            if(response.status == 200){\r\n                return response.json();\r\n            }else{\r\n                throw new Error('Something went wrong');\r\n            }\r\n        })\r\n        .then(jsonResponse => {\r\n            console.log(jsonResponse)\r\n            this.setState({\r\n                addresses: jsonResponse.message.address\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const address = this.state.address;\r\n        const updatedAddress = {\r\n            ...address,\r\n            [e.target.name] :  e.target.value\r\n        };\r\n        this.setState({\r\n            address: updatedAddress\r\n        })\r\n    }\r\n\r\n    addressSelector = (e) => {\r\n\r\n        this.setState({\r\n            selectedAddress: e.target.value,\r\n            existingAddress: true,\r\n            newAddress: false\r\n        });\r\n\r\n    }\r\n\r\n    newAddressSelection = (e) => {\r\n        this.setState({\r\n            selectedAddress: 'newAddressId',\r\n            existingAddress: false,\r\n            newAddress: true\r\n        });\r\n    }\r\n\r\n    addressSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.address)\r\n\r\n        const address = {\r\n            userId: this.props.auth.user.userId,\r\n            address: this.state.address\r\n        }\r\n\r\n       fetch(`${base_url}/user/new-address`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(address)\r\n       })\r\n       .then(response => response.json())\r\n       .then(jsonResponse => {\r\n           console.log('new address');\r\n           console.log(jsonResponse);\r\n           console.log('new address');\r\n          \r\n           //this.getAddresses();\r\n           //console.log(jsonResponse.message);\r\n           const updatedAddressList = jsonResponse.message.address;\r\n           this.setState({\r\n                isAddressConfirm: true,\r\n                address: {\r\n                    ...this.state.address,\r\n                    ...address.address\r\n                },\r\n                addresses: updatedAddressList,\r\n                selectedAddress: updatedAddressList[updatedAddressList.length - 1]._id\r\n            });\r\n           \r\n       })\r\n       .catch(error => {\r\n           console.log(error);\r\n       })\r\n    }\r\n\r\n    confirmDeliveryAddress = () => {\r\n        this.setState({\r\n            isAddressConfirm: true\r\n        });\r\n\r\n    }\r\n\r\n    confirmOrder = () => {\r\n        this.setState({\r\n            isOrderConfirm: true\r\n        })\r\n    }\r\n\r\n    selectPaymentOption = (e) => {\r\n        this.setState({\r\n            selectedPaymentType: e.target.value\r\n        })\r\n    }\r\n\r\n    submitOrder = async () => {\r\n\r\n        if(!this.state.isOrderConfirm){\r\n            return;\r\n        }\r\n\r\n        if(this.state.selectedPaymentType !== 'cod'){\r\n            return;\r\n        }\r\n        \r\n        const order = this.props.cart.cartItem.map(item => {\r\n            return {\r\n                product: item.product,\r\n                price: item.price,\r\n                quantity: item.quantity\r\n            }\r\n        });\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/order/create`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': this.props.auth.token\r\n                },\r\n                body: JSON.stringify({\r\n                    user: this.props.auth.user.userId,\r\n                    address: this.state.selectedAddress,\r\n                    order: order,\r\n                    paymentType: 'COD',\r\n                    paymentStatus: 'pending'\r\n                }),\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResponse = await response.json();\r\n            if(response.status === 201){\r\n                this.props.clearCart();\r\n                this.props.history.push({\r\n                    pathname: '/thank-you',\r\n                    search: '?orderid='+jsonResponse.message._id,\r\n                    state: jsonResponse.message\r\n                });\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        let address;\r\n        if(this.state.isAddressConfirm && !this.state.newAddress){\r\n            address = this.state.addresses.find(address => address._id === this.state.selectedAddress);\r\n        }else{\r\n            address = this.state.address;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"PlaceOrderWrapper\">\r\n\r\n                        \r\n                        <div className=\"DeliveryAddress\">\r\n\r\n                            <div className=\"Card\">\r\n                                <p className=\"CardText\">Login {this.props.auth.isAuthenticated ? <i className=\"fas fa-check\"></i> : null}</p>\r\n                                <p className=\"CardText\">Email: {this.props.auth.user.email}</p>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.isAddressConfirm ? \r\n                                 <div className=\"Card\">\r\n                                     <p className=\"CardText\">Delivery Address {this.state.isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\r\n                                     <p>\r\n                                        <span>{`${address.fullName} - ${address.mobileNumber} - `}</span>\r\n                                        <span>{ `${address.address}, ${address.cityDistrictTown}, ${address.state} - ${address.pinCode}`}</span>\r\n                                        </p>\r\n                                 </div> :\r\n                                 <React.Fragment>\r\n                                <div className=\"Card\">\r\n                                    <h4>Delivery Address</h4>\r\n                                    {\r\n                                        this.state.addresses.length && this.state.addresses.map(address => \r\n                                            <DeliveryAddress \r\n                                                key={address._id} \r\n                                                onAddressSelection={this.addressSelector} \r\n                                                value={this.state.selectedAddress}\r\n                                                address={address} />\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        this.state.existingAddress ?\r\n                                        <div className=\"DeliveryButtonContainer\" >\r\n                                            <button onClick={this.confirmDeliveryAddress} className=\"DeliveryAddressButton\">Deliver Here</button>\r\n                                        </div> : null\r\n                                    }\r\n                                    \r\n                                </div>\r\n                                <div className=\"Card\">\r\n                                    <div>\r\n                                        <RadioButton \r\n                                            name=\"address\"\r\n                                            label=\"Add new Address\"\r\n                                            value={this.state.selectedAddress}\r\n                                            onChange={this.newAddressSelection}\r\n                                        />\r\n                                    </div>\r\n                                    {\r\n                                        this.state.newAddress ? \r\n                                            <AddressForm\r\n                                                address={this.state.address}\r\n                                                inputHandler={this.inputHandler}\r\n                                                addressSubmitHandler={this.addressSubmitHandler}\r\n                                            /> : null\r\n                                    }\r\n                                    \r\n                                    \r\n                                </div>\r\n                                </React.Fragment>\r\n                            }\r\n                            \r\n                               \r\n\r\n                                {\r\n                                    this.state.isOrderConfirm ? \r\n                                    <div className=\"Card\">\r\n                                        <p className=\"CardText\">Order Summary <i className=\"fas fa-check\"></i> </p>\r\n                                    </div> : \r\n                                    this.state.isAddressConfirm ? \r\n                                    <div className=\"Card\">\r\n                                        <h4 className=\"CardText\">Order Summary </h4>\r\n                                        {\r\n                                            this.props.cart.cartItem.map(item => (\r\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\r\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\r\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.image} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h5>{item.name}</h5>\r\n                                                        <h6>Quantity : {item.quantity}</h6>\r\n                                                        <h6>${item.total}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                        <button onClick={this.confirmOrder} className=\"ContinueButton\">Continue</button>\r\n                                    </div>\r\n                                 : null\r\n                                }\r\n                                \r\n                                {\r\n                                    this.state.isOrderConfirm ? \r\n                                    <div className=\"Card\">\r\n                                    <h4 className=\"CardText\">Payment Option</h4>\r\n                                    <ul>\r\n                                        {\r\n                                            this.state.paymentTypes.map(payment => \r\n                                            <li className=\"paymentType\" key={payment.id}>\r\n                                                <RadioButton\r\n                                                    key={payment.id} \r\n                                                    name=\"paymentType\"\r\n                                                    label={payment.label}\r\n                                                    value={payment.value}\r\n                                                    onChange={this.selectPaymentOption}\r\n                                                />\r\n                                            </li>)\r\n                                        }\r\n                                    </ul>\r\n                                    {\r\n                                        this.state.selectedPaymentType !== 'cod' ? \r\n                                        <p className=\"ErrorMessage\">Sorry, Only Cash on Delivery is available</p> : null\r\n                                    }\r\n                                    <button className=\"PaymentConfirm\" onClick={this.submitOrder}>Confirm Order</button>\r\n\r\n                                </div> : null\r\n                                }\r\n                              \r\n                                \r\n\r\n                            \r\n\r\n                            \r\n\r\n\r\n\r\n                            </div>\r\n\r\n                                <CartPrice />\r\n\r\n                            \r\n                    </div>\r\n\r\n                    \r\n                   \r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken()),\r\n        clearCart: () => dispatch(cartActions.clearCart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder);","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\n\r\nclass ThankYou extends Component{\r\n\r\n    render() {\r\n\r\n        const queryParams = this.props.location.search.split(\"?\")[1];\r\n        const orderId = queryParams.split(\"=\")[1];\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"ThankyouPage\">\r\n                       <h1>Thank you for your order</h1>\r\n                       <p className=\"OrderId\">Order id is: {orderId.toLocaleUpperCase()}</p>\r\n                       <p className=\"SmallText\">You will receive an email confirmation shortly at email@gmail.com</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ThankYou;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Header from '../../components/Header/Header';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { base_url } from '../../constants';\r\n\r\nclass Orders extends Component{\r\n\r\n    state = {\r\n        ordersList: []\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n           this.props.getToken()\r\n            .then(result => {\r\n                if(result){\r\n                    this.getOrders();\r\n                }else{\r\n                    this.props.history.push('/login');\r\n                }\r\n            })\r\n        }else{\r\n            this.getOrders();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    getOrders = () => {\r\n        console.log(this.props.auth.isAuthenticated)\r\n        const token =  this.props.auth.token;\r\n        const userId = this.props.auth.user.userId;\r\n        fetch(`${base_url}/order/getorders/${userId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': token\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            console.log(jsonResponse);\r\n            this.setState({\r\n                ordersList: jsonResponse.message\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    getOrderTotal = (id) => {\r\n        const singleOrder = this.state.ordersList.find(order => order._id === id);\r\n        let orderTotal = 0;\r\n        singleOrder.order.forEach(order => {\r\n            orderTotal = orderTotal + (order.price * order.quantity)\r\n        });\r\n\r\n        return orderTotal;\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"Card\">\r\n                        <p className=\"CardText\">My Orders</p>\r\n\r\n                        {\r\n                            this.state.ordersList.map(order => {\r\n                                return (\r\n                                    <div key={order._id} className=\"Order\">\r\n                                        <div className=\"OrderHeader\">\r\n                                            <a href=\"#\">{order._id}</a>\r\n                                        </div>\r\n                                        <div className=\"OrderDescription\">\r\n                                            <div className=\"od1\">\r\n                                                <p className=\"odtitle\">Delivered Address</p>\r\n                                                <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\r\n                                            </div>\r\n                                            <div className=\"od2\">\r\n                                                <p className=\"odtitle\">Payment Type</p>\r\n                                                <a className=\"odp\">{order.paymentType}</a>\r\n                                            </div>\r\n                                            <div className=\"od3\">\r\n                                                <p className=\"odtitle\">Payment Status</p>\r\n                                                <a className=\"odp\">{order.paymentStatus}</a>\r\n                                            </div>\r\n                                        \r\n                                        </div>\r\n                                        <div>\r\n                                            {order.order.map(item => (\r\n                                                <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                    <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.productPic[0].img}/>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"odtitle\">{item.product.name}</p>\r\n                                                        <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                        <p>Quantity: {item.quantity}</p>\r\n                                                        <p>${item.price * item.quantity}</p>\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div className=\"OrderFooter\">\r\n                                            <p>Ordered On <span>{this.formatDate(order.orderDate)}</span></p>\r\n                                            <p>Order Total <span>${this.getOrderTotal(order._id)}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport Shop from './Shop';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport ForgetPassword from './ForgetPassword';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducers from '../store/reducers/authReducers';\r\nimport productReducers from '../store/reducers/productReducers';\r\nimport ProductDetails from './ProductDetails';\r\nimport Home from './Home';\r\nimport Cart from './Cart';\r\nimport cartReducers from '../store/reducers/cartReducers';\r\nimport PlaceOrder from './PlaceOrder';\r\nimport ThankYou from './ThankYou';\r\nimport Orders from './Orders';\r\nimport ResetPassword from './resetPassword/resetPassword';\r\n\r\nconst rootReducers = combineReducers({\r\n auth: authReducers,\r\n  products: productReducers,\r\n  cart: cartReducers\r\n});\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n            <Switch>\r\n              \r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={Signup} /> \r\n              {/* <Route path=\"/forget-password\" component={ForgetPassword} />\r\n              <Route path=\"/change-password/:slug\" component={ResetPassword}/> */}\r\n              <Route path=\"/cpanel\" component={ControlPanel} />\r\n              <Route path=\"/products/:category/:slug\" component={ProductDetails} />\r\n              <Route path=\"/products\"  component={Shop} />\r\n              <PrivateRoute path=\"/cart\" component={Cart} />\r\n              <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\r\n              <PrivateRoute path=\"/thank-you\" component={ThankYou} />\r\n              <PrivateRoute path=\"/orders\" component={Orders} />\r\n              <Route path=\"/\"  component={Shop} />\r\n              \r\n            </Switch>\r\n            \r\n          \r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n      \r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\n//import axios from 'axios';\r\n//import { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nexport default class ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { linkDate:\"\",email:\"\",password: \"\",confirm_password: \"\", errors: {} };\r\n    }\r\n    componentDidMount() {\r\n        let slugParam = this.props.match.params.slug;\r\n        let splitSlug=slugParam.split(\"+++\");\r\n        let reqDate=splitSlug[0];\r\n        let email=splitSlug[1];\r\n        console.log(reqDate);\r\n        console.log(email);\r\n        this.setState({email:email,linkDate:reqDate});\r\n        let date1 = new Date(reqDate);\r\n        let currentDate = new Date();\r\n        let differenceinMS = currentDate - date1\r\n        if (differenceinMS > 3600000) {\r\n            //NotificationManager.error(\"Link Not Valid link will be valid for 15 min.Please sent the reset link Again\");\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n    handleInput = e => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleForm = e => {\r\n        e.preventDefault();\r\n        if (this.state.email === '') {\r\n         //  NotificationManager.warning(\"Email is Required\");\r\n            return false;\r\n        }\r\n        // const data = { email: this.state.email, };\r\n        // console.log(data)\r\n        // axios\r\n        //     .post(\"http://localhost:2019/users/updatePassword\", this.state)\r\n        //     .then(result => {\r\n        //       //  NotificationManager.success(result.data.msg);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         if (err.response && err.response.status === 404)\r\n        //             NotificationManager.error(err.response.data.msg);\r\n        //         else\r\n        //             NotificationManager.error(\"Something Went Wrong\");\r\n        //         this.setState({ errors: err.response })\r\n        //     });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n            \r\n                <form onSubmit={this.handleForm}>\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-3\"></div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">Reset Password</div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label >Password</label>\r\n                                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput} className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label >Confirm Password</label>\r\n                                        <input type=\"password\" name=\"confirm_password\" value={this.state.confirm_password} onChange={this.handleInput} className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <input type=\"button\" value=\"Reset\" onClick={this.handleForm} className=\"btn btn-primary\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-3\"></div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}