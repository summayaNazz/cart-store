{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{base_url}from\"../../constants\";export var ADD_TO_CART='ADD_TO_CART';export var GET_CART_DETAILS='GET_CART_DETAILS';export var UPDATE_CART='UPDATE_CART';export var CLEAR_CART='CLEAR_CART';export var addToCart=function addToCart(token,cartItem){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,jsonResposne;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(base_url,\"/cart/add\"),{headers:{'Content-Type':'application/json','auth-token':token},body:JSON.stringify(cartItem),method:'POST'});case 3:response=_context.sent;_context.next=6;return response.json();case 6:jsonResposne=_context.sent;if(response.status===201){dispatch({type:ADD_TO_CART,cartItem:cartItem});}return _context.abrupt(\"return\",jsonResposne);case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getCartItems=function getCartItems(token,userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,jsonResposne;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(base_url,\"/cart/user/\").concat(userId),{headers:{'Content-Type':'application/json','auth-token':token},method:'POST'});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:jsonResposne=_context2.sent;if(response.status===200){dispatch({type:GET_CART_DETAILS,cartItems:jsonResposne.message[0]});}return _context2.abrupt(\"return\",jsonResposne.message[0]);case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateCart=function updateCart(token,userId,product){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response,jsonResposne;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(base_url,\"/cart/update/quantity\"),{headers:{'Content-Type':'application/json','auth-token':token},method:'PUT',body:JSON.stringify({userId:userId,productId:product.productId,quantity:product.quantity,total:product.total})});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:jsonResposne=_context3.sent;if(response.status===201){dispatch({type:UPDATE_CART,item:product});}return _context3.abrupt(\"return\",jsonResposne.message);case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var clearCart=function clearCart(){return function(dispatch){dispatch({type:CLEAR_CART,payload:null});};};","map":{"version":3,"sources":["E:/mongoDb/store/baali-store/client/src/store/actions/cartActions.js"],"names":["base_url","ADD_TO_CART","GET_CART_DETAILS","UPDATE_CART","CLEAR_CART","addToCart","token","cartItem","dispatch","fetch","headers","body","JSON","stringify","method","response","json","jsonResposne","status","type","console","log","getCartItems","userId","cartItems","message","updateCart","product","productId","quantity","total","item","clearCart","payload"],"mappings":"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","sourcesContent":["import { base_url } from \"../../constants\";\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const GET_CART_DETAILS = 'GET_CART_DETAILS';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const addToCart = (token, cartItem) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await fetch(`${base_url}/cart/add`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                body: JSON.stringify(cartItem),\r\n                method: 'POST'\r\n            });\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: ADD_TO_CART,\r\n                    cartItem: cartItem\r\n                });\r\n            }\r\n\r\n            return jsonResposne;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCartItems = (token, userId) => {\r\n    return async dispatch => {\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/user/${userId}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 200){\r\n                dispatch({\r\n                    type: GET_CART_DETAILS,\r\n                    cartItems: jsonResposne.message[0]\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message[0];\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const updateCart = (token, userId, product) => {\r\n    return async dispatch => {\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/update/quantity`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    productId: product.productId,\r\n                    quantity: product.quantity,\r\n                    total: product.total\r\n                })\r\n            });\r\n            const jsonResposne = await response.json();\r\n\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: UPDATE_CART,\r\n                    item: product\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message;\r\n\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CLEAR_CART,\r\n            payload: null\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}