{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{base_url}from\"../../constants\";export var AUTHENTICATE_USER='AUTHENTICATE_USER';export var LOGOUT_USER='LOGOUT_USER';export var signup=function signup(user){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,jsonResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(base_url,\"/user/signup\"),{headers:{'Content-Type':'application/json','Accepts':'application/json'},method:'POST',body:JSON.stringify({firstName:user.firstName,lastName:user.lastName,email:user.email,password:user.password})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:jsonResponse=_context.sent;return _context.abrupt(\"return\",jsonResponse);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var authenticate=function authenticate(email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,jsonResponse;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(base_url,\"/user/login\"),{headers:{'Content-Type':'application/json','Accepts':'application/json'},method:'POST',body:JSON.stringify({email:email,password:password})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:jsonResponse=_context2.sent;if(response.status===200){window.localStorage.setItem('auth',JSON.stringify(response.message));dispatch({type:AUTHENTICATE_USER,auth:jsonResponse.message});}return _context2.abrupt(\"return\",jsonResponse.message);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var logout=function logout(){return function(dispatch){var authData=window.localStorage.getItem('auth');if(authData){window.localStorage.clear();dispatch({type:LOGOUT_USER,payload:''});return Promise.resolve(true);}return Promise.resolve(false);};};export var getToken=function getToken(){return function(dispatch){var authData=window.localStorage.getItem('auth');if(authData){var auth=JSON.parse(authData);if(auth.hasOwnProperty('token')&&auth.token!=''){dispatch({type:AUTHENTICATE_USER,auth:auth});return Promise.resolve(true);}}return Promise.resolve(false);};};","map":{"version":3,"sources":["E:/mongoDb/store/baali-store/client/src/store/actions/authActions.js"],"names":["base_url","AUTHENTICATE_USER","LOGOUT_USER","signup","user","dispatch","fetch","headers","method","body","JSON","stringify","firstName","lastName","email","password","response","json","jsonResponse","console","log","authenticate","status","window","localStorage","setItem","message","type","auth","logout","authData","getItem","clear","payload","Promise","resolve","getToken","parse","hasOwnProperty","token"],"mappings":"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","sourcesContent":["import { base_url } from \"../../constants\";\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const signup = (user) => {\r\n    return async dispatch => {\r\n        try{\r\n           const response = await fetch(`${base_url}/user/signup`, {\r\n               headers: {\r\n                   'Content-Type': 'application/json',\r\n                   'Accepts': 'application/json'\r\n               },\r\n               method: 'POST',\r\n               body: JSON.stringify({\r\n                   firstName: user.firstName,\r\n                   lastName: user.lastName,\r\n                   email: user.email,\r\n                   password: user.password\r\n               })\r\n           });\r\n           const jsonResponse = await response.json();\r\n           return jsonResponse;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const authenticate = (email, password) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${base_url}/user/login`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                'Accepts': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n\r\n        const jsonResponse = await response.json();\r\n        if(response.status === 200){\r\n\r\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\r\n\r\n            dispatch({\r\n                type: AUTHENTICATE_USER,\r\n                auth: jsonResponse.message\r\n            });\r\n        }\r\n\r\n        return jsonResponse.message;\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n        if(authData){\r\n            window.localStorage.clear();\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                payload: ''\r\n            });\r\n            return Promise.resolve(true);\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n}\r\n\r\nexport const getToken = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n\r\n        if(authData){\r\n            const auth = JSON.parse(authData);\r\n            if(auth.hasOwnProperty('token') && auth.token != ''){\r\n                dispatch({\r\n                    type: AUTHENTICATE_USER,\r\n                    auth: auth\r\n                });\r\n\r\n                return Promise.resolve(true);\r\n\r\n            }\r\n        }\r\n        \r\n        return Promise.resolve(false);\r\n        \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}