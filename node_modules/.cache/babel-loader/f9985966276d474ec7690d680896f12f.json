{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\mongoDb\\\\store\\\\baali-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Header from'../../components/Header/Header';import'./style.css';import NormalInput from'../../components/UI/NormalInput';import*as authActions from'../../store/actions/authActions';import{connect}from'react-redux';import AddressForm from'./AddressForm';import CartPrice from'../../components/CartPrice';import DeliveryAddress from'./DeliveryAddress';import RadioButton from'../../components/UI/RadioButton';import*as cartActions from'../../store/actions/cartActions';import{base_url}from'../../constants';var PlaceOrder=/*#__PURE__*/function(_Component){_inherits(PlaceOrder,_Component);var _super=_createSuper(PlaceOrder);function PlaceOrder(){var _this;_classCallCheck(this,PlaceOrder);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={addresses:[],address:{fullName:\"\",mobileNumber:\"\",pinCode:\"\",locality:\"\",address:\"\",cityDistrictTown:\"\",state:\"\",landmark:\"\",alternatePhoneNumber:\"\"},order:[],selectedAddress:'',existingAddress:false,newAddress:false,isAddressConfirm:false,isOrderConfirm:false,selectedPaymentType:'cod',paymentTypes:[// {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\n// {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\n// {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\n{id:1,value:'cod',label:'Cash on Delivery',isActive:true}]};_this.getAddresses=function(){var userId=_this.props.auth.user.userId;fetch(\"\".concat(base_url,\"/user/get-addresses/\")+userId,{headers:{'auth-token':_this.props.auth.token}}).then(function(response){if(response.status==200){return response.json();}else{throw new Error('Something went wrong');}}).then(function(jsonResponse){console.log(jsonResponse);_this.setState({addresses:jsonResponse.message.address});}).catch(function(error){console.log(error);});};_this.inputHandler=function(e){var address=_this.state.address;var updatedAddress=_objectSpread({},address,_defineProperty({},e.target.name,e.target.value));_this.setState({address:updatedAddress});};_this.addressSelector=function(e){_this.setState({selectedAddress:e.target.value,existingAddress:true,newAddress:false});};_this.newAddressSelection=function(e){_this.setState({selectedAddress:'newAddressId',existingAddress:false,newAddress:true});};_this.addressSubmitHandler=function(e){e.preventDefault();console.log(_this.state.address);var address={userId:_this.props.auth.user.userId,address:_this.state.address};fetch(\"\".concat(base_url,\"/user/new-address\"),{headers:{'Content-Type':'application/json','auth-token':_this.props.auth.token},method:'POST',body:JSON.stringify(address)}).then(function(response){return response.json();}).then(function(jsonResponse){console.log('new address');console.log(jsonResponse);console.log('new address');//this.getAddresses();\n//console.log(jsonResponse.message);\nvar updatedAddressList=jsonResponse.message.address;_this.setState({isAddressConfirm:true,address:_objectSpread({},_this.state.address,{},address.address),addresses:updatedAddressList,selectedAddress:updatedAddressList[updatedAddressList.length-1]._id});}).catch(function(error){console.log(error);});};_this.confirmDeliveryAddress=function(){_this.setState({isAddressConfirm:true});};_this.confirmOrder=function(){_this.setState({isOrderConfirm:true});};_this.selectPaymentOption=function(e){_this.setState({selectedPaymentType:e.target.value});};_this.submitOrder=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var order,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_this.state.isOrderConfirm){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!(_this.state.selectedPaymentType!=='cod')){_context.next=4;break;}return _context.abrupt(\"return\");case 4:order=_this.props.cart.cartItem.map(function(item){return{product:item.product,price:item.price,quantity:item.quantity};});_context.prev=5;_context.next=8;return fetch(\"\".concat(base_url,\"/order/create\"),{headers:{'Content-Type':'application/json','auth-token':_this.props.auth.token},body:JSON.stringify({user:_this.props.auth.user.userId,address:_this.state.selectedAddress,order:order,paymentType:'COD',paymentStatus:'pending'}),method:'POST'});case 8:response=_context.sent;_context.next=11;return response.json();case 11:jsonResponse=_context.sent;if(response.status===201){_this.props.clearCart();_this.props.history.push({pathname:'/thank-you',search:'?orderid='+jsonResponse.message._id,state:jsonResponse.message});}_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](5);console.log(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[5,15]]);}));return _this;}_createClass(PlaceOrder,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(!this.props.auth.isAuthenticated){this.props.getToken().then(function(result){if(result){_this2.getAddresses();}else{_this2.props.history.push('/login');}}).catch(function(error){console.log(error);});}else{this.getAddresses();}}},{key:\"render\",value:function render(){var _this3=this;var address;if(this.state.isAddressConfirm&&!this.state.newAddress){address=this.state.addresses.find(function(address){return address._id===_this3.state.selectedAddress;});}else{address=this.state.address;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"Content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"PlaceOrderWrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"DeliveryAddress\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"p\",{className:\"CardText\"},\"Login \",this.props.auth.isAuthenticated?/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-check\"}):null),/*#__PURE__*/React.createElement(\"p\",{className:\"CardText\"},\"Email: \",this.props.auth.user.email)),this.state.isAddressConfirm?/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"p\",{className:\"CardText\"},\"Delivery Address \",this.state.isAddressConfirm?/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-check\"}):null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",null,\"\".concat(address.fullName,\" - \").concat(address.mobileNumber,\" - \")),/*#__PURE__*/React.createElement(\"span\",null,\"\".concat(address.address,\", \").concat(address.cityDistrictTown,\", \").concat(address.state,\" - \").concat(address.pinCode)))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Delivery Address\"),this.state.addresses.length&&this.state.addresses.map(function(address){return/*#__PURE__*/React.createElement(DeliveryAddress,{key:address._id,onAddressSelection:_this3.addressSelector,value:_this3.state.selectedAddress,address:address});}),this.state.existingAddress?/*#__PURE__*/React.createElement(\"div\",{className:\"DeliveryButtonContainer\"},/*#__PURE__*/React.createElement(\"button\",{onClick:this.confirmDeliveryAddress,className:\"DeliveryAddressButton\"},\"Deliver Here\")):null),/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(RadioButton,{name:\"address\",label:\"Add new Address\",value:this.state.selectedAddress,onChange:this.newAddressSelection})),this.state.newAddress?/*#__PURE__*/React.createElement(AddressForm,{address:this.state.address,inputHandler:this.inputHandler,addressSubmitHandler:this.addressSubmitHandler}):null)),this.state.isOrderConfirm?/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"p\",{className:\"CardText\"},\"Order Summary \",/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-check\"}),\" \")):this.state.isAddressConfirm?/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"CardText\"},\"Order Summary \"),this.props.cart.cartItem.map(function(item){return/*#__PURE__*/React.createElement(\"div\",{key:item.product,style:{display:'flex',margin:'5px 0',alignItems:'center'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60px',height:'60px',overflow:'hidden',position:'relative'}},/*#__PURE__*/React.createElement(\"img\",{style:{maxWidth:'100%',maxHeight:'100%',position:'absolute',left:'50%',transform:'translateX(-50%)'},src:item.image,alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,item.name),/*#__PURE__*/React.createElement(\"h6\",null,\"Quantity : \",item.quantity),/*#__PURE__*/React.createElement(\"h6\",null,\"$\",item.total)));}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.confirmOrder,className:\"ContinueButton\"},\"Continue\")):null,this.state.isOrderConfirm?/*#__PURE__*/React.createElement(\"div\",{className:\"Card\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"CardText\"},\"Payment Option\"),/*#__PURE__*/React.createElement(\"ul\",null,this.state.paymentTypes.map(function(payment){return/*#__PURE__*/React.createElement(\"li\",{className:\"paymentType\",key:payment.id},/*#__PURE__*/React.createElement(RadioButton,{key:payment.id,name:\"paymentType\",label:payment.label,value:payment.value,onChange:_this3.selectPaymentOption}));})),this.state.selectedPaymentType!=='cod'?/*#__PURE__*/React.createElement(\"p\",{className:\"ErrorMessage\"},\"Sorry, Only Cash on Delivery is available\"):null,/*#__PURE__*/React.createElement(\"button\",{className:\"PaymentConfirm\",onClick:this.submitOrder},\"Confirm Order\")):null),/*#__PURE__*/React.createElement(CartPrice,null))));}}]);return PlaceOrder;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,cart:state.cart};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getToken:function getToken(){return dispatch(authActions.getToken());},clearCart:function clearCart(){return dispatch(cartActions.clearCart());}};};export default connect(mapStateToProps,mapDispatchToProps)(PlaceOrder);","map":{"version":3,"sources":["E:/mongoDb/store/baali-store/client/src/containers/PlaceOrder/index.js"],"names":["React","Component","Header","NormalInput","authActions","connect","AddressForm","CartPrice","DeliveryAddress","RadioButton","cartActions","base_url","PlaceOrder","state","addresses","address","fullName","mobileNumber","pinCode","locality","cityDistrictTown","landmark","alternatePhoneNumber","order","selectedAddress","existingAddress","newAddress","isAddressConfirm","isOrderConfirm","selectedPaymentType","paymentTypes","id","value","label","isActive","getAddresses","userId","props","auth","user","fetch","headers","token","then","response","status","json","Error","jsonResponse","console","log","setState","message","catch","error","inputHandler","e","updatedAddress","target","name","addressSelector","newAddressSelection","addressSubmitHandler","preventDefault","method","body","JSON","stringify","updatedAddressList","length","_id","confirmDeliveryAddress","confirmOrder","selectPaymentOption","submitOrder","cart","cartItem","map","item","product","price","quantity","paymentType","paymentStatus","clearCart","history","push","pathname","search","isAuthenticated","getToken","result","find","email","display","margin","alignItems","width","height","overflow","position","maxWidth","maxHeight","left","transform","image","total","payment","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"swCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,iCAA7B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,iCAA7B,CACA,OAASC,QAAT,KAAyB,iBAAzB,C,GAEMC,CAAAA,U,2UAEFC,K,CAAQ,CACJC,SAAS,CAAE,EADP,CAEJC,OAAO,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,YAAY,CAAE,EAFT,CAGLC,OAAO,CAAE,EAHJ,CAILC,QAAQ,CAAE,EAJL,CAKLJ,OAAO,CAAE,EALJ,CAMLK,gBAAgB,CAAE,EANb,CAOLP,KAAK,CAAE,EAPF,CAQLQ,QAAQ,CAAE,EARL,CASLC,oBAAoB,CAAE,EATjB,CAFL,CAaJC,KAAK,CAAE,EAbH,CAcJC,eAAe,CAAE,EAdb,CAeJC,eAAe,CAAE,KAfb,CAgBJC,UAAU,CAAE,KAhBR,CAiBJC,gBAAgB,CAAE,KAjBd,CAkBJC,cAAc,CAAE,KAlBZ,CAmBJC,mBAAmB,CAAE,KAnBjB,CAoBJC,YAAY,CAAE,CACV;AACA;AACA;AACA,CAACC,EAAE,CAAE,CAAL,CAAQC,KAAK,CAAE,KAAf,CAAsBC,KAAK,CAAE,kBAA7B,CAAiDC,QAAQ,CAAE,IAA3D,CAJU,CApBV,C,OAgDRC,Y,CAAe,UAAM,CACjB,GAAMC,CAAAA,MAAM,CAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBH,MAApC,CACAI,KAAK,CAAC,UAAG7B,QAAH,yBAAkCyB,MAAnC,CAA2C,CAC5CK,OAAO,CAAE,CACL,aAAc,MAAKJ,KAAL,CAAWC,IAAX,CAAgBI,KADzB,CADmC,CAA3C,CAAL,CAKCC,IALD,CAKM,SAAAC,QAAQ,CAAI,CACd,GAAGA,QAAQ,CAACC,MAAT,EAAmB,GAAtB,CAA0B,CACtB,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAFD,IAEK,CACD,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACH,CACJ,CAXD,EAYCJ,IAZD,CAYM,SAAAK,YAAY,CAAI,CAClBC,OAAO,CAACC,GAAR,CAAYF,YAAZ,EACA,MAAKG,QAAL,CAAc,CACVrC,SAAS,CAAEkC,YAAY,CAACI,OAAb,CAAqBrC,OADtB,CAAd,EAGH,CAjBD,EAkBCsC,KAlBD,CAkBO,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CApBD,EAqBH,C,OAEDC,Y,CAAe,SAACC,CAAD,CAAO,CAClB,GAAMzC,CAAAA,OAAO,CAAG,MAAKF,KAAL,CAAWE,OAA3B,CACA,GAAM0C,CAAAA,cAAc,kBACb1C,OADa,oBAEfyC,CAAC,CAACE,MAAF,CAASC,IAFM,CAEGH,CAAC,CAACE,MAAF,CAAS1B,KAFZ,EAApB,CAIA,MAAKmB,QAAL,CAAc,CACVpC,OAAO,CAAE0C,cADC,CAAd,EAGH,C,OAEDG,e,CAAkB,SAACJ,CAAD,CAAO,CAErB,MAAKL,QAAL,CAAc,CACV3B,eAAe,CAAEgC,CAAC,CAACE,MAAF,CAAS1B,KADhB,CAEVP,eAAe,CAAE,IAFP,CAGVC,UAAU,CAAE,KAHF,CAAd,EAMH,C,OAEDmC,mB,CAAsB,SAACL,CAAD,CAAO,CACzB,MAAKL,QAAL,CAAc,CACV3B,eAAe,CAAE,cADP,CAEVC,eAAe,CAAE,KAFP,CAGVC,UAAU,CAAE,IAHF,CAAd,EAKH,C,OAEDoC,oB,CAAuB,SAACN,CAAD,CAAO,CAC1BA,CAAC,CAACO,cAAF,GACAd,OAAO,CAACC,GAAR,CAAY,MAAKrC,KAAL,CAAWE,OAAvB,EAEA,GAAMA,CAAAA,OAAO,CAAG,CACZqB,MAAM,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBH,MADjB,CAEZrB,OAAO,CAAE,MAAKF,KAAL,CAAWE,OAFR,CAAhB,CAKDyB,KAAK,WAAI7B,QAAJ,sBAAiC,CACjC8B,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,aAAc,MAAKJ,KAAL,CAAWC,IAAX,CAAgBI,KAFzB,CADwB,CAKjCsB,MAAM,CAAE,MALyB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAepD,OAAf,CAN2B,CAAjC,CAAL,CAQC4B,IARD,CAQM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACE,IAAT,EAAJ,EARd,EASCH,IATD,CASM,SAAAK,YAAY,CAAI,CAClBC,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,YAAZ,EACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAEA;AACA;AACA,GAAMkB,CAAAA,kBAAkB,CAAGpB,YAAY,CAACI,OAAb,CAAqBrC,OAAhD,CACA,MAAKoC,QAAL,CAAc,CACTxB,gBAAgB,CAAE,IADT,CAETZ,OAAO,kBACA,MAAKF,KAAL,CAAWE,OADX,IAEAA,OAAO,CAACA,OAFR,CAFE,CAMTD,SAAS,CAAEsD,kBANF,CAOT5C,eAAe,CAAE4C,kBAAkB,CAACA,kBAAkB,CAACC,MAAnB,CAA4B,CAA7B,CAAlB,CAAkDC,GAP1D,CAAd,EAUH,CA3BD,EA4BCjB,KA5BD,CA4BO,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CA9BD,EA+BF,C,OAEDiB,sB,CAAyB,UAAM,CAC3B,MAAKpB,QAAL,CAAc,CACVxB,gBAAgB,CAAE,IADR,CAAd,EAIH,C,OAED6C,Y,CAAe,UAAM,CACjB,MAAKrB,QAAL,CAAc,CACVvB,cAAc,CAAE,IADN,CAAd,EAGH,C,OAED6C,mB,CAAsB,SAACjB,CAAD,CAAO,CACzB,MAAKL,QAAL,CAAc,CACVtB,mBAAmB,CAAE2B,CAAC,CAACE,MAAF,CAAS1B,KADpB,CAAd,EAGH,C,OAED0C,W,sEAAc,sKAEN,MAAK7D,KAAL,CAAWe,cAFL,sEAMP,MAAKf,KAAL,CAAWgB,mBAAX,GAAmC,KAN5B,kEAUJN,KAVI,CAUI,MAAKc,KAAL,CAAWsC,IAAX,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,SAAAC,IAAI,CAAI,CAC/C,MAAO,CACHC,OAAO,CAAED,IAAI,CAACC,OADX,CAEHC,KAAK,CAAEF,IAAI,CAACE,KAFT,CAGHC,QAAQ,CAAEH,IAAI,CAACG,QAHZ,CAAP,CAKH,CANa,CAVJ,uCAoBiBzC,CAAAA,KAAK,WAAI7B,QAAJ,kBAA4B,CACpD8B,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,aAAc,MAAKJ,KAAL,CAAWC,IAAX,CAAgBI,KAFzB,CAD2C,CAKpDuB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjB5B,IAAI,CAAE,MAAKF,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBH,MADV,CAEjBrB,OAAO,CAAE,MAAKF,KAAL,CAAWW,eAFH,CAGjBD,KAAK,CAAEA,KAHU,CAIjB2D,WAAW,CAAE,KAJI,CAKjBC,aAAa,CAAE,SALE,CAAf,CAL8C,CAYpDnB,MAAM,CAAE,MAZ4C,CAA5B,CApBtB,QAoBApB,QApBA,sCAmCqBA,CAAAA,QAAQ,CAACE,IAAT,EAnCrB,SAmCAE,YAnCA,eAoCN,GAAGJ,QAAQ,CAACC,MAAT,GAAoB,GAAvB,CAA2B,CACvB,MAAKR,KAAL,CAAW+C,SAAX,GACA,MAAK/C,KAAL,CAAWgD,OAAX,CAAmBC,IAAnB,CAAwB,CACpBC,QAAQ,CAAE,YADU,CAEpBC,MAAM,CAAE,YAAYxC,YAAY,CAACI,OAAb,CAAqBkB,GAFrB,CAGpBzD,KAAK,CAAEmC,YAAY,CAACI,OAHA,CAAxB,EAKH,CA3CK,iFA8CNH,OAAO,CAACC,GAAR,cA9CM,qE,qGAvIM,iBAChB,GAAG,CAAC,KAAKb,KAAL,CAAWC,IAAX,CAAgBmD,eAApB,CAAoC,CAChC,KAAKpD,KAAL,CAAWqD,QAAX,GACC/C,IADD,CACM,SAAAgD,MAAM,CAAI,CACZ,GAAGA,MAAH,CAAU,CAEN,MAAI,CAACxD,YAAL,GAEH,CAJD,IAIK,CACD,MAAI,CAACE,KAAL,CAAWgD,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CATD,EAUCjC,KAVD,CAUO,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CAZD,EAaH,CAdD,IAcK,CACD,KAAKnB,YAAL,GACH,CACJ,C,uCAwKQ,iBAEL,GAAIpB,CAAAA,OAAJ,CACA,GAAG,KAAKF,KAAL,CAAWc,gBAAX,EAA+B,CAAC,KAAKd,KAAL,CAAWa,UAA9C,CAAyD,CACrDX,OAAO,CAAG,KAAKF,KAAL,CAAWC,SAAX,CAAqB8E,IAArB,CAA0B,SAAA7E,OAAO,QAAIA,CAAAA,OAAO,CAACuD,GAAR,GAAgB,MAAI,CAACzD,KAAL,CAAWW,eAA/B,EAAjC,CAAV,CACH,CAFD,IAEK,CACDT,OAAO,CAAG,KAAKF,KAAL,CAAWE,OAArB,CACH,CAED,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,MAAD,MADJ,cAEI,2BAAK,SAAS,CAAC,SAAf,eACI,2BAAK,SAAS,CAAC,mBAAf,eAGI,2BAAK,SAAS,CAAC,iBAAf,eAEI,2BAAK,SAAS,CAAC,MAAf,eACI,yBAAG,SAAS,CAAC,UAAb,WAA+B,KAAKsB,KAAL,CAAWC,IAAX,CAAgBmD,eAAhB,cAAkC,yBAAG,SAAS,CAAC,cAAb,EAAlC,CAAqE,IAApG,CADJ,cAEI,yBAAG,SAAS,CAAC,UAAb,YAAgC,KAAKpD,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBsD,KAArD,CAFJ,CAFJ,CAQQ,KAAKhF,KAAL,CAAWc,gBAAX,cACC,2BAAK,SAAS,CAAC,MAAf,eACI,yBAAG,SAAS,CAAC,UAAb,sBAA0C,KAAKd,KAAL,CAAWc,gBAAX,cAA8B,yBAAG,SAAS,CAAC,cAAb,EAA9B,CAAiE,IAA3G,CADJ,cAEI,0CACG,0CAAUZ,OAAO,CAACC,QAAlB,eAAgCD,OAAO,CAACE,YAAxC,QADH,cAEG,0CAAWF,OAAO,CAACA,OAAnB,cAA+BA,OAAO,CAACK,gBAAvC,cAA4DL,OAAO,CAACF,KAApE,eAA+EE,OAAO,CAACG,OAAvF,EAFH,CAFJ,CADD,cAQC,oBAAC,KAAD,CAAO,QAAP,mBACD,2BAAK,SAAS,CAAC,MAAf,eACI,iDADJ,CAGQ,KAAKL,KAAL,CAAWC,SAAX,CAAqBuD,MAArB,EAA+B,KAAKxD,KAAL,CAAWC,SAAX,CAAqB+D,GAArB,CAAyB,SAAA9D,OAAO,qBAC3D,oBAAC,eAAD,EACI,GAAG,CAAEA,OAAO,CAACuD,GADjB,CAEI,kBAAkB,CAAE,MAAI,CAACV,eAF7B,CAGI,KAAK,CAAE,MAAI,CAAC/C,KAAL,CAAWW,eAHtB,CAII,OAAO,CAAET,OAJb,EAD2D,EAAhC,CAHvC,CAYQ,KAAKF,KAAL,CAAWY,eAAX,cACA,2BAAK,SAAS,CAAC,yBAAf,eACI,8BAAQ,OAAO,CAAE,KAAK8C,sBAAtB,CAA8C,SAAS,CAAC,uBAAxD,iBADJ,CADA,CAGS,IAfjB,CADC,cAoBD,2BAAK,SAAS,CAAC,MAAf,eACI,4CACI,oBAAC,WAAD,EACI,IAAI,CAAC,SADT,CAEI,KAAK,CAAC,iBAFV,CAGI,KAAK,CAAE,KAAK1D,KAAL,CAAWW,eAHtB,CAII,QAAQ,CAAE,KAAKqC,mBAJnB,EADJ,CADJ,CAUQ,KAAKhD,KAAL,CAAWa,UAAX,cACI,oBAAC,WAAD,EACI,OAAO,CAAE,KAAKb,KAAL,CAAWE,OADxB,CAEI,YAAY,CAAE,KAAKwC,YAFvB,CAGI,oBAAoB,CAAE,KAAKO,oBAH/B,EADJ,CAKS,IAfjB,CApBC,CAhBT,CA8DY,KAAKjD,KAAL,CAAWe,cAAX,cACA,2BAAK,SAAS,CAAC,MAAf,eACI,yBAAG,SAAS,CAAC,UAAb,gCAAsC,yBAAG,SAAS,CAAC,cAAb,EAAtC,KADJ,CADA,CAIA,KAAKf,KAAL,CAAWc,gBAAX,cACA,2BAAK,SAAS,CAAC,MAAf,eACI,0BAAI,SAAS,CAAC,UAAd,mBADJ,CAGQ,KAAKU,KAAL,CAAWsC,IAAX,CAAgBC,QAAhB,CAAyBC,GAAzB,CAA6B,SAAAC,IAAI,qBAC7B,2BAAK,GAAG,CAAEA,IAAI,CAACC,OAAf,CAAwB,KAAK,CAAE,CAACe,OAAO,CAAE,MAAV,CAAkBC,MAAM,CAAE,OAA1B,CAAmCC,UAAU,CAAE,QAA/C,CAA/B,eACI,2BAAK,KAAK,CAAE,CAACC,KAAK,CAAE,MAAR,CAAgBC,MAAM,CAAE,MAAxB,CAAgCC,QAAQ,CAAE,QAA1C,CAAoDC,QAAQ,CAAE,UAA9D,CAAZ,eACI,2BAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,MAAX,CAAmBC,SAAS,CAAE,MAA9B,CAAsCF,QAAQ,CAAE,UAAhD,CAA4DG,IAAI,CAAE,KAAlE,CAAyEC,SAAS,CAAE,kBAApF,CAAZ,CAAqH,GAAG,CAAE1B,IAAI,CAAC2B,KAA/H,CAAsI,GAAG,CAAC,EAA1I,EADJ,CADJ,cAII,4CACI,8BAAK3B,IAAI,CAACnB,IAAV,CADJ,cAEI,4CAAgBmB,IAAI,CAACG,QAArB,CAFJ,cAGI,kCAAMH,IAAI,CAAC4B,KAAX,CAHJ,CAJJ,CAD6B,EAAjC,CAHR,cAgBI,8BAAQ,OAAO,CAAE,KAAKlC,YAAtB,CAAoC,SAAS,CAAC,gBAA9C,aAhBJ,CADA,CAmBD,IArFX,CAyFY,KAAK3D,KAAL,CAAWe,cAAX,cACA,2BAAK,SAAS,CAAC,MAAf,eACA,0BAAI,SAAS,CAAC,UAAd,mBADA,cAEA,8BAEQ,KAAKf,KAAL,CAAWiB,YAAX,CAAwB+C,GAAxB,CAA4B,SAAA8B,OAAO,qBACnC,0BAAI,SAAS,CAAC,aAAd,CAA4B,GAAG,CAAEA,OAAO,CAAC5E,EAAzC,eACI,oBAAC,WAAD,EACI,GAAG,CAAE4E,OAAO,CAAC5E,EADjB,CAEI,IAAI,CAAC,aAFT,CAGI,KAAK,CAAE4E,OAAO,CAAC1E,KAHnB,CAII,KAAK,CAAE0E,OAAO,CAAC3E,KAJnB,CAKI,QAAQ,CAAE,MAAI,CAACyC,mBALnB,EADJ,CADmC,EAAnC,CAFR,CAFA,CAiBI,KAAK5D,KAAL,CAAWgB,mBAAX,GAAmC,KAAnC,cACA,yBAAG,SAAS,CAAC,cAAb,8CADA,CAC4E,IAlBhF,cAoBA,8BAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAE,KAAK6C,WAAjD,kBApBA,CADA,CAuBK,IAhHjB,CAHJ,cAgIY,oBAAC,SAAD,MAhIZ,CADJ,CAFJ,CADJ,CA+IH,C,wBAhXoBzE,S,EAoXzB,GAAM2G,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAA/F,KAAK,CAAI,CAC7B,MAAO,CACHyB,IAAI,CAAEzB,KAAK,CAACyB,IADT,CAEHqC,IAAI,CAAE9D,KAAK,CAAC8D,IAFT,CAAP,CAIH,CALD,CAOA,GAAMkC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHpB,QAAQ,CAAE,0BAAMoB,CAAAA,QAAQ,CAAC1G,WAAW,CAACsF,QAAZ,EAAD,CAAd,EADP,CAEHN,SAAS,CAAE,2BAAM0B,CAAAA,QAAQ,CAACpG,WAAW,CAAC0E,SAAZ,EAAD,CAAd,EAFR,CAAP,CAIH,CALD,CAOA,cAAe/E,CAAAA,OAAO,CAACuG,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CjG,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport NormalInput from '../../components/UI/NormalInput';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport AddressForm from './AddressForm';\r\nimport CartPrice from '../../components/CartPrice';\r\nimport DeliveryAddress from './DeliveryAddress';\r\nimport RadioButton from '../../components/UI/RadioButton';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport { base_url } from '../../constants';\r\n\r\nclass PlaceOrder extends Component{\r\n\r\n    state = {\r\n        addresses: [],\r\n        address: {\r\n            fullName: \"\",\r\n            mobileNumber: \"\",\r\n            pinCode: \"\",\r\n            locality: \"\",\r\n            address: \"\",\r\n            cityDistrictTown: \"\",\r\n            state: \"\",\r\n            landmark: \"\",\r\n            alternatePhoneNumber: \"\"\r\n        },\r\n        order: [],\r\n        selectedAddress: '',\r\n        existingAddress: false,\r\n        newAddress: false,\r\n        isAddressConfirm: false,\r\n        isOrderConfirm: false,\r\n        selectedPaymentType: 'cod',\r\n        paymentTypes: [\r\n            // {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\r\n            // {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\r\n            // {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\r\n            {id: 1, value: 'cod', label: 'Cash on Delivery', isActive: true},\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n            .then(result => {\r\n                if(result){\r\n\r\n                    this.getAddresses();\r\n\r\n                }else{\r\n                    this.props.history.push('/login');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }else{\r\n            this.getAddresses();\r\n        }\r\n    }\r\n\r\n    getAddresses = () => {\r\n        const userId = this.props.auth.user.userId;\r\n        fetch(`${base_url}/user/get-addresses/`+userId, {\r\n            headers: {\r\n                'auth-token': this.props.auth.token\r\n            }\r\n        })\r\n        .then(response => {\r\n            if(response.status == 200){\r\n                return response.json();\r\n            }else{\r\n                throw new Error('Something went wrong');\r\n            }\r\n        })\r\n        .then(jsonResponse => {\r\n            console.log(jsonResponse)\r\n            this.setState({\r\n                addresses: jsonResponse.message.address\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const address = this.state.address;\r\n        const updatedAddress = {\r\n            ...address,\r\n            [e.target.name] :  e.target.value\r\n        };\r\n        this.setState({\r\n            address: updatedAddress\r\n        })\r\n    }\r\n\r\n    addressSelector = (e) => {\r\n\r\n        this.setState({\r\n            selectedAddress: e.target.value,\r\n            existingAddress: true,\r\n            newAddress: false\r\n        });\r\n\r\n    }\r\n\r\n    newAddressSelection = (e) => {\r\n        this.setState({\r\n            selectedAddress: 'newAddressId',\r\n            existingAddress: false,\r\n            newAddress: true\r\n        });\r\n    }\r\n\r\n    addressSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.address)\r\n\r\n        const address = {\r\n            userId: this.props.auth.user.userId,\r\n            address: this.state.address\r\n        }\r\n\r\n       fetch(`${base_url}/user/new-address`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(address)\r\n       })\r\n       .then(response => response.json())\r\n       .then(jsonResponse => {\r\n           console.log('new address');\r\n           console.log(jsonResponse);\r\n           console.log('new address');\r\n          \r\n           //this.getAddresses();\r\n           //console.log(jsonResponse.message);\r\n           const updatedAddressList = jsonResponse.message.address;\r\n           this.setState({\r\n                isAddressConfirm: true,\r\n                address: {\r\n                    ...this.state.address,\r\n                    ...address.address\r\n                },\r\n                addresses: updatedAddressList,\r\n                selectedAddress: updatedAddressList[updatedAddressList.length - 1]._id\r\n            });\r\n           \r\n       })\r\n       .catch(error => {\r\n           console.log(error);\r\n       })\r\n    }\r\n\r\n    confirmDeliveryAddress = () => {\r\n        this.setState({\r\n            isAddressConfirm: true\r\n        });\r\n\r\n    }\r\n\r\n    confirmOrder = () => {\r\n        this.setState({\r\n            isOrderConfirm: true\r\n        })\r\n    }\r\n\r\n    selectPaymentOption = (e) => {\r\n        this.setState({\r\n            selectedPaymentType: e.target.value\r\n        })\r\n    }\r\n\r\n    submitOrder = async () => {\r\n\r\n        if(!this.state.isOrderConfirm){\r\n            return;\r\n        }\r\n\r\n        if(this.state.selectedPaymentType !== 'cod'){\r\n            return;\r\n        }\r\n        \r\n        const order = this.props.cart.cartItem.map(item => {\r\n            return {\r\n                product: item.product,\r\n                price: item.price,\r\n                quantity: item.quantity\r\n            }\r\n        });\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/order/create`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': this.props.auth.token\r\n                },\r\n                body: JSON.stringify({\r\n                    user: this.props.auth.user.userId,\r\n                    address: this.state.selectedAddress,\r\n                    order: order,\r\n                    paymentType: 'COD',\r\n                    paymentStatus: 'pending'\r\n                }),\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResponse = await response.json();\r\n            if(response.status === 201){\r\n                this.props.clearCart();\r\n                this.props.history.push({\r\n                    pathname: '/thank-you',\r\n                    search: '?orderid='+jsonResponse.message._id,\r\n                    state: jsonResponse.message\r\n                });\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        let address;\r\n        if(this.state.isAddressConfirm && !this.state.newAddress){\r\n            address = this.state.addresses.find(address => address._id === this.state.selectedAddress);\r\n        }else{\r\n            address = this.state.address;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"PlaceOrderWrapper\">\r\n\r\n                        \r\n                        <div className=\"DeliveryAddress\">\r\n\r\n                            <div className=\"Card\">\r\n                                <p className=\"CardText\">Login {this.props.auth.isAuthenticated ? <i className=\"fas fa-check\"></i> : null}</p>\r\n                                <p className=\"CardText\">Email: {this.props.auth.user.email}</p>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.isAddressConfirm ? \r\n                                 <div className=\"Card\">\r\n                                     <p className=\"CardText\">Delivery Address {this.state.isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\r\n                                     <p>\r\n                                        <span>{`${address.fullName} - ${address.mobileNumber} - `}</span>\r\n                                        <span>{ `${address.address}, ${address.cityDistrictTown}, ${address.state} - ${address.pinCode}`}</span>\r\n                                        </p>\r\n                                 </div> :\r\n                                 <React.Fragment>\r\n                                <div className=\"Card\">\r\n                                    <h4>Delivery Address</h4>\r\n                                    {\r\n                                        this.state.addresses.length && this.state.addresses.map(address => \r\n                                            <DeliveryAddress \r\n                                                key={address._id} \r\n                                                onAddressSelection={this.addressSelector} \r\n                                                value={this.state.selectedAddress}\r\n                                                address={address} />\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        this.state.existingAddress ?\r\n                                        <div className=\"DeliveryButtonContainer\" >\r\n                                            <button onClick={this.confirmDeliveryAddress} className=\"DeliveryAddressButton\">Deliver Here</button>\r\n                                        </div> : null\r\n                                    }\r\n                                    \r\n                                </div>\r\n                                <div className=\"Card\">\r\n                                    <div>\r\n                                        <RadioButton \r\n                                            name=\"address\"\r\n                                            label=\"Add new Address\"\r\n                                            value={this.state.selectedAddress}\r\n                                            onChange={this.newAddressSelection}\r\n                                        />\r\n                                    </div>\r\n                                    {\r\n                                        this.state.newAddress ? \r\n                                            <AddressForm\r\n                                                address={this.state.address}\r\n                                                inputHandler={this.inputHandler}\r\n                                                addressSubmitHandler={this.addressSubmitHandler}\r\n                                            /> : null\r\n                                    }\r\n                                    \r\n                                    \r\n                                </div>\r\n                                </React.Fragment>\r\n                            }\r\n                            \r\n                               \r\n\r\n                                {\r\n                                    this.state.isOrderConfirm ? \r\n                                    <div className=\"Card\">\r\n                                        <p className=\"CardText\">Order Summary <i className=\"fas fa-check\"></i> </p>\r\n                                    </div> : \r\n                                    this.state.isAddressConfirm ? \r\n                                    <div className=\"Card\">\r\n                                        <h4 className=\"CardText\">Order Summary </h4>\r\n                                        {\r\n                                            this.props.cart.cartItem.map(item => (\r\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\r\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\r\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.image} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h5>{item.name}</h5>\r\n                                                        <h6>Quantity : {item.quantity}</h6>\r\n                                                        <h6>${item.total}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                        <button onClick={this.confirmOrder} className=\"ContinueButton\">Continue</button>\r\n                                    </div>\r\n                                 : null\r\n                                }\r\n                                \r\n                                {\r\n                                    this.state.isOrderConfirm ? \r\n                                    <div className=\"Card\">\r\n                                    <h4 className=\"CardText\">Payment Option</h4>\r\n                                    <ul>\r\n                                        {\r\n                                            this.state.paymentTypes.map(payment => \r\n                                            <li className=\"paymentType\" key={payment.id}>\r\n                                                <RadioButton\r\n                                                    key={payment.id} \r\n                                                    name=\"paymentType\"\r\n                                                    label={payment.label}\r\n                                                    value={payment.value}\r\n                                                    onChange={this.selectPaymentOption}\r\n                                                />\r\n                                            </li>)\r\n                                        }\r\n                                    </ul>\r\n                                    {\r\n                                        this.state.selectedPaymentType !== 'cod' ? \r\n                                        <p className=\"ErrorMessage\">Sorry, Only Cash on Delivery is available</p> : null\r\n                                    }\r\n                                    <button className=\"PaymentConfirm\" onClick={this.submitOrder}>Confirm Order</button>\r\n\r\n                                </div> : null\r\n                                }\r\n                              \r\n                                \r\n\r\n                            \r\n\r\n                            \r\n\r\n\r\n\r\n                            </div>\r\n\r\n                                <CartPrice />\r\n\r\n                            \r\n                    </div>\r\n\r\n                    \r\n                   \r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken()),\r\n        clearCart: () => dispatch(cartActions.clearCart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder);"]},"metadata":{},"sourceType":"module"}